/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* src = "dut.sv:1.1-6.10" *)
module pass_through(inp, out);
  (* src = "dut.sv:2.18-2.21" *)
  input [63:0] inp;
  wire [63:0] inp;
  (* src = "dut.sv:3.19-3.22" *)
  output [63:0] out;
  wire [63:0] out;
  assign out = inp;
endmodule

(* keep =  1  *)
(* top =  1  *)
(* src = "dut.sv:8.1-40.10" *)
module unbased_unsized();
  (* src = "dut.sv:35.17-35.36" *)
  wire _000_;
  (* src = "dut.sv:36.17-36.36" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  (* src = "dut.sv:10.9-10.12" *)
  wire [63:0] o01;
  (* src = "dut.sv:10.14-10.17" *)
  wire [63:0] o02;
  (* src = "dut.sv:10.19-10.22" *)
  wire [63:0] o03;
  (* src = "dut.sv:10.24-10.27" *)
  wire [63:0] o04;
  (* src = "dut.sv:11.9-11.12" *)
  wire [63:0] o05;
  (* src = "dut.sv:11.14-11.17" *)
  wire [63:0] o06;
  (* src = "dut.sv:11.19-11.22" *)
  wire [63:0] o07;
  (* src = "dut.sv:11.24-11.27" *)
  wire [63:0] o08;
  (* src = "dut.sv:12.9-12.12" *)
  wire [63:0] o09;
  (* src = "dut.sv:12.14-12.17" *)
  wire [63:0] o10;
  \$_NOR_  _126_ (
    .A(o09[1]),
    .B(o09[0]),
    .Y(_002_)
  );
  \$_OR_  _127_ (
    .A(o09[3]),
    .B(o09[2]),
    .Y(_003_)
  );
  \$_ANDNOT_  _128_ (
    .A(_002_),
    .B(_003_),
    .Y(_004_)
  );
  \$_OR_  _129_ (
    .A(o09[5]),
    .B(o09[4]),
    .Y(_005_)
  );
  \$_OR_  _130_ (
    .A(o09[7]),
    .B(o09[6]),
    .Y(_006_)
  );
  \$_OR_  _131_ (
    .A(_006_),
    .B(_005_),
    .Y(_007_)
  );
  \$_ANDNOT_  _132_ (
    .A(_004_),
    .B(_007_),
    .Y(_008_)
  );
  \$_OR_  _133_ (
    .A(o09[9]),
    .B(o09[8]),
    .Y(_009_)
  );
  \$_OR_  _134_ (
    .A(o09[11]),
    .B(o09[10]),
    .Y(_010_)
  );
  \$_OR_  _135_ (
    .A(_010_),
    .B(_009_),
    .Y(_011_)
  );
  \$_OR_  _136_ (
    .A(o09[13]),
    .B(o09[12]),
    .Y(_012_)
  );
  \$_OR_  _137_ (
    .A(o09[15]),
    .B(o09[14]),
    .Y(_013_)
  );
  \$_OR_  _138_ (
    .A(_013_),
    .B(_012_),
    .Y(_014_)
  );
  \$_OR_  _139_ (
    .A(_014_),
    .B(_011_),
    .Y(_015_)
  );
  \$_ANDNOT_  _140_ (
    .A(_008_),
    .B(_015_),
    .Y(_016_)
  );
  \$_OR_  _141_ (
    .A(o09[17]),
    .B(o09[16]),
    .Y(_017_)
  );
  \$_OR_  _142_ (
    .A(o09[19]),
    .B(o09[18]),
    .Y(_018_)
  );
  \$_OR_  _143_ (
    .A(_018_),
    .B(_017_),
    .Y(_019_)
  );
  \$_OR_  _144_ (
    .A(o09[21]),
    .B(o09[20]),
    .Y(_020_)
  );
  \$_OR_  _145_ (
    .A(o09[23]),
    .B(o09[22]),
    .Y(_021_)
  );
  \$_OR_  _146_ (
    .A(_021_),
    .B(_020_),
    .Y(_022_)
  );
  \$_OR_  _147_ (
    .A(_022_),
    .B(_019_),
    .Y(_023_)
  );
  \$_OR_  _148_ (
    .A(o09[25]),
    .B(o09[24]),
    .Y(_024_)
  );
  \$_OR_  _149_ (
    .A(o09[27]),
    .B(o09[26]),
    .Y(_025_)
  );
  \$_OR_  _150_ (
    .A(_025_),
    .B(_024_),
    .Y(_026_)
  );
  \$_OR_  _151_ (
    .A(o09[29]),
    .B(o09[28]),
    .Y(_027_)
  );
  \$_OR_  _152_ (
    .A(o09[31]),
    .B(o09[30]),
    .Y(_028_)
  );
  \$_OR_  _153_ (
    .A(_028_),
    .B(_027_),
    .Y(_029_)
  );
  \$_OR_  _154_ (
    .A(_029_),
    .B(_026_),
    .Y(_030_)
  );
  \$_OR_  _155_ (
    .A(_030_),
    .B(_023_),
    .Y(_031_)
  );
  \$_ANDNOT_  _156_ (
    .A(_016_),
    .B(_031_),
    .Y(_032_)
  );
  \$_OR_  _157_ (
    .A(o09[33]),
    .B(o09[32]),
    .Y(_033_)
  );
  \$_OR_  _158_ (
    .A(o09[35]),
    .B(o09[34]),
    .Y(_034_)
  );
  \$_OR_  _159_ (
    .A(_034_),
    .B(_033_),
    .Y(_035_)
  );
  \$_OR_  _160_ (
    .A(o09[37]),
    .B(o09[36]),
    .Y(_036_)
  );
  \$_OR_  _161_ (
    .A(o09[39]),
    .B(o09[38]),
    .Y(_037_)
  );
  \$_OR_  _162_ (
    .A(_037_),
    .B(_036_),
    .Y(_038_)
  );
  \$_OR_  _163_ (
    .A(_038_),
    .B(_035_),
    .Y(_039_)
  );
  \$_OR_  _164_ (
    .A(o09[41]),
    .B(o09[40]),
    .Y(_040_)
  );
  \$_OR_  _165_ (
    .A(o09[43]),
    .B(o09[42]),
    .Y(_041_)
  );
  \$_OR_  _166_ (
    .A(_041_),
    .B(_040_),
    .Y(_042_)
  );
  \$_OR_  _167_ (
    .A(o09[45]),
    .B(o09[44]),
    .Y(_043_)
  );
  \$_OR_  _168_ (
    .A(o09[47]),
    .B(o09[46]),
    .Y(_044_)
  );
  \$_OR_  _169_ (
    .A(_044_),
    .B(_043_),
    .Y(_045_)
  );
  \$_OR_  _170_ (
    .A(_045_),
    .B(_042_),
    .Y(_046_)
  );
  \$_OR_  _171_ (
    .A(_046_),
    .B(_039_),
    .Y(_047_)
  );
  \$_OR_  _172_ (
    .A(o09[49]),
    .B(o09[48]),
    .Y(_048_)
  );
  \$_OR_  _173_ (
    .A(o09[51]),
    .B(o09[50]),
    .Y(_049_)
  );
  \$_OR_  _174_ (
    .A(_049_),
    .B(_048_),
    .Y(_050_)
  );
  \$_OR_  _175_ (
    .A(o09[53]),
    .B(o09[52]),
    .Y(_051_)
  );
  \$_OR_  _176_ (
    .A(o09[55]),
    .B(o09[54]),
    .Y(_052_)
  );
  \$_OR_  _177_ (
    .A(_052_),
    .B(_051_),
    .Y(_053_)
  );
  \$_OR_  _178_ (
    .A(_053_),
    .B(_050_),
    .Y(_054_)
  );
  \$_OR_  _179_ (
    .A(o09[57]),
    .B(o09[56]),
    .Y(_055_)
  );
  \$_OR_  _180_ (
    .A(o09[59]),
    .B(o09[58]),
    .Y(_056_)
  );
  \$_OR_  _181_ (
    .A(_056_),
    .B(_055_),
    .Y(_057_)
  );
  \$_OR_  _182_ (
    .A(o09[61]),
    .B(o09[60]),
    .Y(_058_)
  );
  \$_OR_  _183_ (
    .A(o09[63]),
    .B(o09[62]),
    .Y(_059_)
  );
  \$_OR_  _184_ (
    .A(_059_),
    .B(_058_),
    .Y(_060_)
  );
  \$_OR_  _185_ (
    .A(_060_),
    .B(_057_),
    .Y(_061_)
  );
  \$_OR_  _186_ (
    .A(_061_),
    .B(_054_),
    .Y(_062_)
  );
  \$_OR_  _187_ (
    .A(_062_),
    .B(_047_),
    .Y(_063_)
  );
  \$_ANDNOT_  _188_ (
    .A(_032_),
    .B(_063_),
    .Y(_000_)
  );
  \$_AND_  _189_ (
    .A(o10[1]),
    .B(o10[0]),
    .Y(_064_)
  );
  \$_NAND_  _190_ (
    .A(o10[3]),
    .B(o10[2]),
    .Y(_065_)
  );
  \$_ANDNOT_  _191_ (
    .A(_064_),
    .B(_065_),
    .Y(_066_)
  );
  \$_NAND_  _192_ (
    .A(o10[5]),
    .B(o10[4]),
    .Y(_067_)
  );
  \$_NAND_  _193_ (
    .A(o10[7]),
    .B(o10[6]),
    .Y(_068_)
  );
  \$_OR_  _194_ (
    .A(_068_),
    .B(_067_),
    .Y(_069_)
  );
  \$_ANDNOT_  _195_ (
    .A(_066_),
    .B(_069_),
    .Y(_070_)
  );
  \$_NAND_  _196_ (
    .A(o10[9]),
    .B(o10[8]),
    .Y(_071_)
  );
  \$_NAND_  _197_ (
    .A(o10[11]),
    .B(o10[10]),
    .Y(_072_)
  );
  \$_OR_  _198_ (
    .A(_072_),
    .B(_071_),
    .Y(_073_)
  );
  \$_NAND_  _199_ (
    .A(o10[13]),
    .B(o10[12]),
    .Y(_074_)
  );
  \$_NAND_  _200_ (
    .A(o10[15]),
    .B(o10[14]),
    .Y(_075_)
  );
  \$_OR_  _201_ (
    .A(_075_),
    .B(_074_),
    .Y(_076_)
  );
  \$_OR_  _202_ (
    .A(_076_),
    .B(_073_),
    .Y(_077_)
  );
  \$_ANDNOT_  _203_ (
    .A(_070_),
    .B(_077_),
    .Y(_078_)
  );
  \$_NAND_  _204_ (
    .A(o10[17]),
    .B(o10[16]),
    .Y(_079_)
  );
  \$_NAND_  _205_ (
    .A(o10[19]),
    .B(o10[18]),
    .Y(_080_)
  );
  \$_OR_  _206_ (
    .A(_080_),
    .B(_079_),
    .Y(_081_)
  );
  \$_NAND_  _207_ (
    .A(o10[21]),
    .B(o10[20]),
    .Y(_082_)
  );
  \$_NAND_  _208_ (
    .A(o10[23]),
    .B(o10[22]),
    .Y(_083_)
  );
  \$_OR_  _209_ (
    .A(_083_),
    .B(_082_),
    .Y(_084_)
  );
  \$_OR_  _210_ (
    .A(_084_),
    .B(_081_),
    .Y(_085_)
  );
  \$_NAND_  _211_ (
    .A(o10[25]),
    .B(o10[24]),
    .Y(_086_)
  );
  \$_NAND_  _212_ (
    .A(o10[27]),
    .B(o10[26]),
    .Y(_087_)
  );
  \$_OR_  _213_ (
    .A(_087_),
    .B(_086_),
    .Y(_088_)
  );
  \$_NAND_  _214_ (
    .A(o10[29]),
    .B(o10[28]),
    .Y(_089_)
  );
  \$_NAND_  _215_ (
    .A(o10[31]),
    .B(o10[30]),
    .Y(_090_)
  );
  \$_OR_  _216_ (
    .A(_090_),
    .B(_089_),
    .Y(_091_)
  );
  \$_OR_  _217_ (
    .A(_091_),
    .B(_088_),
    .Y(_092_)
  );
  \$_OR_  _218_ (
    .A(_092_),
    .B(_085_),
    .Y(_093_)
  );
  \$_ANDNOT_  _219_ (
    .A(_078_),
    .B(_093_),
    .Y(_094_)
  );
  \$_NAND_  _220_ (
    .A(o10[33]),
    .B(o10[32]),
    .Y(_095_)
  );
  \$_NAND_  _221_ (
    .A(o10[35]),
    .B(o10[34]),
    .Y(_096_)
  );
  \$_OR_  _222_ (
    .A(_096_),
    .B(_095_),
    .Y(_097_)
  );
  \$_NAND_  _223_ (
    .A(o10[37]),
    .B(o10[36]),
    .Y(_098_)
  );
  \$_NAND_  _224_ (
    .A(o10[39]),
    .B(o10[38]),
    .Y(_099_)
  );
  \$_OR_  _225_ (
    .A(_099_),
    .B(_098_),
    .Y(_100_)
  );
  \$_OR_  _226_ (
    .A(_100_),
    .B(_097_),
    .Y(_101_)
  );
  \$_NAND_  _227_ (
    .A(o10[41]),
    .B(o10[40]),
    .Y(_102_)
  );
  \$_NAND_  _228_ (
    .A(o10[43]),
    .B(o10[42]),
    .Y(_103_)
  );
  \$_OR_  _229_ (
    .A(_103_),
    .B(_102_),
    .Y(_104_)
  );
  \$_NAND_  _230_ (
    .A(o10[45]),
    .B(o10[44]),
    .Y(_105_)
  );
  \$_NAND_  _231_ (
    .A(o10[47]),
    .B(o10[46]),
    .Y(_106_)
  );
  \$_OR_  _232_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  \$_OR_  _233_ (
    .A(_107_),
    .B(_104_),
    .Y(_108_)
  );
  \$_OR_  _234_ (
    .A(_108_),
    .B(_101_),
    .Y(_109_)
  );
  \$_NAND_  _235_ (
    .A(o10[49]),
    .B(o10[48]),
    .Y(_110_)
  );
  \$_NAND_  _236_ (
    .A(o10[51]),
    .B(o10[50]),
    .Y(_111_)
  );
  \$_OR_  _237_ (
    .A(_111_),
    .B(_110_),
    .Y(_112_)
  );
  \$_NAND_  _238_ (
    .A(o10[53]),
    .B(o10[52]),
    .Y(_113_)
  );
  \$_NAND_  _239_ (
    .A(o10[55]),
    .B(o10[54]),
    .Y(_114_)
  );
  \$_OR_  _240_ (
    .A(_114_),
    .B(_113_),
    .Y(_115_)
  );
  \$_OR_  _241_ (
    .A(_115_),
    .B(_112_),
    .Y(_116_)
  );
  \$_NAND_  _242_ (
    .A(o10[57]),
    .B(o10[56]),
    .Y(_117_)
  );
  \$_NAND_  _243_ (
    .A(o10[59]),
    .B(o10[58]),
    .Y(_118_)
  );
  \$_OR_  _244_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  \$_NAND_  _245_ (
    .A(o10[61]),
    .B(o10[60]),
    .Y(_120_)
  );
  \$_NAND_  _246_ (
    .A(o10[63]),
    .B(o10[62]),
    .Y(_121_)
  );
  \$_OR_  _247_ (
    .A(_121_),
    .B(_120_),
    .Y(_122_)
  );
  \$_OR_  _248_ (
    .A(_122_),
    .B(_119_),
    .Y(_123_)
  );
  \$_OR_  _249_ (
    .A(_123_),
    .B(_116_),
    .Y(_124_)
  );
  \$_OR_  _250_ (
    .A(_124_),
    .B(_109_),
    .Y(_125_)
  );
  \$_ANDNOT_  _251_ (
    .A(_094_),
    .B(_125_),
    .Y(_001_)
  );
  (* src = "dut.sv:27.9-27.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967295),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _252_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:28.9-28.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967294),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _253_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:29.9-29.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967293),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _254_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:30.9-30.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967292),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _255_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:31.9-31.41" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967291),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _256_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:32.9-32.41" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967290),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _257_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:33.9-33.41" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967289),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _258_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:34.9-34.41" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967288),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _259_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:35.9-35.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967287),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _260_ (
    .A(_000_),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:36.9-36.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967286),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _261_ (
    .A(_001_),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:37.9-37.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967285),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _262_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* src = "dut.sv:38.9-38.37" *)
  \$check  #(
    .ARGS_WIDTH(32'd0),
    .FLAVOR("assert"),
    .FORMAT(),
    .PRIORITY(32'd4294967284),
    .TRG_ENABLE(32'd0),
    .TRG_POLARITY(),
    .TRG_WIDTH(32'd0)
  ) _263_ (
    .A(1'h1),
    .ARGS(),
    .EN(1'h1),
    .TRG()
  );
  (* module_not_derived = 32'd1 *)
  (* src = "dut.sv:22.18-22.31" *)
  pass_through pt09 (
    .inp(64'h0000000000000000),
    .out(o09)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "dut.sv:23.18-23.31" *)
  pass_through pt10 (
    .inp(64'hffffffffffffffff),
    .out(o10)
  );
  assign o01 = 64'h0000000000000000;
  assign o02 = 64'hffffffffffffffff;
  assign o03 = 64'hxxxxxxxxxxxxxxxx;
  assign o04 = 64'hzzzzzzzzzzzzzzzz;
  assign o05 = 64'h0000000000000000;
  assign o06 = 64'h0000000000000007;
  assign o07 = 64'b0000000000000000000000000000000000000000000000000000000000000xxx;
  assign o08 = 64'b0000000000000000000000000000000000000000000000000000000000000zzz;
endmodule

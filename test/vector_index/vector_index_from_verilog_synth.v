/* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* top =  1  *)
(* src = "dut.sv:8.1-71.10" *)
module vector_index(Blk, Wht, Moves);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  (* src = "dut.sv:14.14-14.17" *)
  input [8:0] Blk;
  wire [8:0] Blk;
  (* src = "dut.sv:23.12-23.18" *)
  (* unused_bits = "2 8" *)
  wire [8:0] Move_E;
  (* src = "dut.sv:22.12-22.18" *)
  (* unused_bits = "6 8" *)
  wire [8:0] Move_N;
  (* unused_bits = "0 2" *)
  wire [2:0] Move_S;
  (* unused_bits = "0 6" *)
  wire [6:0] Move_W;
  (* src = "dut.sv:16.14-16.19" *)
  output [8:0] Moves;
  wire [8:0] Moves;
  (* src = "dut.sv:15.14-15.17" *)
  input [8:0] Wht;
  wire [8:0] Wht;
  \$_NOT_  _33_ (
    .A(Wht[4]),
    .Y(_00_)
  );
  \$_OR_  _34_ (
    .A(Blk[7]),
    .B(Wht[7]),
    .Y(_01_)
  );
  \$_OR_  _35_ (
    .A(_01_),
    .B(_00_),
    .Y(_02_)
  );
  \$_ANDNOT_  _36_ (
    .A(Blk[1]),
    .B(_02_),
    .Y(Moves[7])
  );
  \$_OR_  _37_ (
    .A(Blk[5]),
    .B(Wht[5]),
    .Y(_03_)
  );
  \$_OR_  _38_ (
    .A(_03_),
    .B(_00_),
    .Y(_04_)
  );
  \$_ANDNOT_  _39_ (
    .A(Blk[3]),
    .B(_04_),
    .Y(Moves[5])
  );
  \$_OR_  _40_ (
    .A(Blk[3]),
    .B(Wht[3]),
    .Y(_05_)
  );
  \$_OR_  _41_ (
    .A(_05_),
    .B(_00_),
    .Y(_06_)
  );
  \$_ANDNOT_  _42_ (
    .A(Blk[5]),
    .B(_06_),
    .Y(Moves[3])
  );
  \$_OR_  _43_ (
    .A(Wht[1]),
    .B(Blk[1]),
    .Y(_07_)
  );
  \$_OR_  _44_ (
    .A(_07_),
    .B(_00_),
    .Y(_08_)
  );
  \$_ANDNOT_  _45_ (
    .A(Blk[7]),
    .B(_08_),
    .Y(Moves[1])
  );
  \$_NOT_  _46_ (
    .A(Wht[3]),
    .Y(_09_)
  );
  \$_OR_  _47_ (
    .A(Wht[6]),
    .B(Blk[6]),
    .Y(_10_)
  );
  \$_OR_  _48_ (
    .A(_10_),
    .B(_09_),
    .Y(_11_)
  );
  \$_ANDNOT_  _49_ (
    .A(Blk[0]),
    .B(_11_),
    .Y(_12_)
  );
  \$_NOT_  _50_ (
    .A(Wht[7]),
    .Y(_13_)
  );
  \$_OR_  _51_ (
    .A(_10_),
    .B(_13_),
    .Y(_14_)
  );
  \$_ANDNOT_  _52_ (
    .A(Blk[8]),
    .B(_14_),
    .Y(_15_)
  );
  \$_OR_  _53_ (
    .A(_15_),
    .B(_12_),
    .Y(Moves[6])
  );
  \$_NOT_  _54_ (
    .A(Wht[5]),
    .Y(_16_)
  );
  \$_OR_  _55_ (
    .A(Wht[8]),
    .B(Blk[8]),
    .Y(_17_)
  );
  \$_OR_  _56_ (
    .A(_17_),
    .B(_16_),
    .Y(_18_)
  );
  \$_ANDNOT_  _57_ (
    .A(Blk[2]),
    .B(_18_),
    .Y(_19_)
  );
  \$_OR_  _58_ (
    .A(_17_),
    .B(_13_),
    .Y(_20_)
  );
  \$_ANDNOT_  _59_ (
    .A(Blk[6]),
    .B(_20_),
    .Y(_21_)
  );
  \$_OR_  _60_ (
    .A(_21_),
    .B(_19_),
    .Y(Moves[8])
  );
  \$_NOT_  _61_ (
    .A(Wht[1]),
    .Y(_22_)
  );
  \$_OR_  _62_ (
    .A(Wht[2]),
    .B(Blk[2]),
    .Y(_23_)
  );
  \$_OR_  _63_ (
    .A(_23_),
    .B(_22_),
    .Y(_24_)
  );
  \$_ANDNOT_  _64_ (
    .A(Blk[0]),
    .B(_24_),
    .Y(_25_)
  );
  \$_OR_  _65_ (
    .A(_23_),
    .B(_16_),
    .Y(_26_)
  );
  \$_ANDNOT_  _66_ (
    .A(Blk[8]),
    .B(_26_),
    .Y(_27_)
  );
  \$_OR_  _67_ (
    .A(_27_),
    .B(_25_),
    .Y(Moves[2])
  );
  \$_OR_  _68_ (
    .A(Wht[0]),
    .B(Blk[0]),
    .Y(_28_)
  );
  \$_OR_  _69_ (
    .A(_28_),
    .B(_22_),
    .Y(_29_)
  );
  \$_ANDNOT_  _70_ (
    .A(Blk[2]),
    .B(_29_),
    .Y(_30_)
  );
  \$_OR_  _71_ (
    .A(_28_),
    .B(_09_),
    .Y(_31_)
  );
  \$_ANDNOT_  _72_ (
    .A(Blk[6]),
    .B(_31_),
    .Y(_32_)
  );
  \$_OR_  _73_ (
    .A(_32_),
    .B(_30_),
    .Y(Moves[0])
  );
  assign { Move_E[7:3], Move_E[1:0] } = { 2'h0, Moves[5], 4'h0 };
  assign { Move_N[7], Move_N[5:0] } = { Moves[7], 6'h00 };
  assign Move_S[1] = Moves[1];
  assign Move_W[5:1] = { 2'h0, Moves[3], 2'h0 };
  assign Moves[4] = 1'h0;
endmodule

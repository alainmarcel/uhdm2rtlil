# Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
autoidx 11
attribute \dynports 1
attribute \cells_not_processed 1
attribute \src "dut.sv:1.1-26.10"
module \sp_read_or_write
  parameter \ABITS 4
  parameter \WIDTH 8
  attribute \src "dut.sv:19.2-24.5"
  wire width 4 $0$memwr$\mem$dut.sv:21$1_ADDR[3:0]$3
  attribute \src "dut.sv:19.2-24.5"
  wire width 8 $0$memwr$\mem$dut.sv:21$1_DATA[7:0]$4
  attribute \src "dut.sv:19.2-24.5"
  wire width 8 $0$memwr$\mem$dut.sv:21$1_EN[7:0]$5
  attribute \src "dut.sv:19.2-24.5"
  wire width 8 $0\rdata_a[7:0]
  attribute \src "dut.sv:19.2-24.5"
  wire width 4 $1$memwr$\mem$dut.sv:21$1_ADDR[3:0]$6
  attribute \src "dut.sv:19.2-24.5"
  wire width 8 $1$memwr$\mem$dut.sv:21$1_DATA[7:0]$7
  attribute \src "dut.sv:19.2-24.5"
  wire width 8 $1$memwr$\mem$dut.sv:21$1_EN[7:0]$8
  attribute \src "dut.sv:0.0-0.0"
  wire width 8 $1\rdata_a[7:0]
  attribute \src "dut.sv:23.15-23.18"
  wire width 8 $memrd$\mem$dut.sv:23$9_DATA
  attribute \src "dut.sv:0.0-0.0"
  wire width 4 $memwr$\mem$dut.sv:21$1_ADDR
  attribute \src "dut.sv:0.0-0.0"
  wire width 8 $memwr$\mem$dut.sv:21$1_DATA
  attribute \src "dut.sv:0.0-0.0"
  wire width 8 $memwr$\mem$dut.sv:21$1_EN
  attribute \src "dut.sv:8.20-8.26"
  wire width 4 input 4 \addr_a
  attribute \src "dut.sv:6.8-6.11"
  wire input 1 \clk
  attribute \src "dut.sv:14.10-14.11"
  wire width 32 signed \i
  attribute \src "dut.sv:10.25-10.32"
  wire width 8 output 6 \rdata_a
  attribute \src "dut.sv:7.16-7.22"
  wire input 3 \rden_a
  attribute \src "dut.sv:9.20-9.27"
  wire width 8 input 5 \wdata_a
  attribute \src "dut.sv:7.8-7.14"
  wire input 2 \wren_a
  attribute \src "dut.sv:12.18-12.21"
  memory width 8 size 16 \mem
  attribute \src "dut.sv:23.15-23.18"
  cell $memrd $memrd$\mem$dut.sv:23$9
    parameter \ABITS 4
    parameter \CLK_ENABLE 0
    parameter \CLK_POLARITY 0
    parameter \MEMID "\\mem"
    parameter \TRANSPARENT 0
    parameter \WIDTH 8
    connect \ADDR \addr_a
    connect \CLK 1'x
    connect \DATA $memrd$\mem$dut.sv:23$9_DATA
    connect \EN 1'x
  end
  attribute \src "dut.sv:0.0-0.0"
  process $proc$dut.sv:0$10
    assign { } { }
    assign $1\rdata_a[7:0] 8'00000000
    sync always
    sync init
      update \rdata_a $1\rdata_a[7:0]
  end
  attribute \src "dut.sv:19.2-24.5"
  process $proc$dut.sv:19$2
    assign $0\rdata_a[7:0] \rdata_a
    assign { } { }
    assign { } { }
    assign { } { }
    assign { } { }
    assign { } { }
    assign { } { }
    assign $0$memwr$\mem$dut.sv:21$1_ADDR[3:0]$3 $1$memwr$\mem$dut.sv:21$1_ADDR[3:0]$6
    assign $0$memwr$\mem$dut.sv:21$1_DATA[7:0]$4 $1$memwr$\mem$dut.sv:21$1_DATA[7:0]$7
    assign $0$memwr$\mem$dut.sv:21$1_EN[7:0]$5 $1$memwr$\mem$dut.sv:21$1_EN[7:0]$8
    attribute \src "dut.sv:20.3-23.27"
    switch \wren_a
      attribute \src "dut.sv:20.7-20.13"
      case 1'1
        assign { } { }
        assign { } { }
        assign { } { }
        assign $1$memwr$\mem$dut.sv:21$1_ADDR[3:0]$6 \addr_a
        assign $1$memwr$\mem$dut.sv:21$1_DATA[7:0]$7 \wdata_a
        assign $1$memwr$\mem$dut.sv:21$1_EN[7:0]$8 8'11111111
      attribute \src "dut.sv:22.3-22.7"
      case 
        assign $1$memwr$\mem$dut.sv:21$1_ADDR[3:0]$6 4'x
        assign $1$memwr$\mem$dut.sv:21$1_DATA[7:0]$7 8'x
        assign $1$memwr$\mem$dut.sv:21$1_EN[7:0]$8 8'00000000
        attribute \src "dut.sv:22.8-23.27"
        switch \rden_a
          attribute \src "dut.sv:22.12-22.18"
          case 1'1
            assign $0\rdata_a[7:0] $memrd$\mem$dut.sv:23$9_DATA
          case 
        end
    end
    sync posedge \clk
      update \rdata_a $0\rdata_a[7:0]
      update $memwr$\mem$dut.sv:21$1_ADDR $0$memwr$\mem$dut.sv:21$1_ADDR[3:0]$3
      update $memwr$\mem$dut.sv:21$1_DATA $0$memwr$\mem$dut.sv:21$1_DATA[7:0]$4
      update $memwr$\mem$dut.sv:21$1_EN $0$memwr$\mem$dut.sv:21$1_EN[7:0]$5
      attribute \src "dut.sv:21.4-21.26"
      memwr \mem $1$memwr$\mem$dut.sv:21$1_ADDR[3:0]$6 $1$memwr$\mem$dut.sv:21$1_DATA[7:0]$7 $1$memwr$\mem$dut.sv:21$1_EN[7:0]$8 0'x
  end
end

/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* top =  1  *)
(* src = "dut.sv:7.1-27.10" *)
module struct_array(data_in, tag_in, data_out, tag_out);
  (* src = "dut.sv:8.24-8.31" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "dut.sv:9.24-9.30" *)
  input [3:0] tag_in;
  wire [3:0] tag_in;
  (* src = "dut.sv:10.24-10.32" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "dut.sv:11.24-11.31" *)
  output [3:0] tag_out;
  wire [3:0] tag_out;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  (* src = "dut.sv:14.14-14.20" *)
  (* wiretype = "\\packet_t" *)
  wire [11:0] packet;
  \$_NOT_  _08_ (
    .A(data_in[0]),
    .Y(data_out[0])
  );
  \$_NOT_  _09_ (
    .A(tag_in[1]),
    .Y(tag_out[1])
  );
  \$_NOT_  _10_ (
    .A(tag_in[3]),
    .Y(tag_out[3])
  );
  \$_AND_  _11_ (
    .A(data_in[4]),
    .B(data_in[5]),
    .Y(_00_)
  );
  \$_AND_  _12_ (
    .A(data_in[2]),
    .B(data_in[3]),
    .Y(_01_)
  );
  \$_NAND_  _13_ (
    .A(data_in[1]),
    .B(data_in[0]),
    .Y(_02_)
  );
  \$_ANDNOT_  _14_ (
    .A(_01_),
    .B(_02_),
    .Y(_03_)
  );
  \$_NAND_  _15_ (
    .A(_03_),
    .B(_00_),
    .Y(_04_)
  );
  \$_XNOR_  _16_ (
    .A(_04_),
    .B(data_in[6]),
    .Y(data_out[6])
  );
  \$_ANDNOT_  _17_ (
    .A(data_in[6]),
    .B(_04_),
    .Y(_05_)
  );
  \$_XOR_  _18_ (
    .A(_05_),
    .B(data_in[7]),
    .Y(data_out[7])
  );
  \$_XOR_  _19_ (
    .A(data_in[1]),
    .B(data_in[0]),
    .Y(data_out[1])
  );
  \$_XNOR_  _20_ (
    .A(_02_),
    .B(data_in[2]),
    .Y(data_out[2])
  );
  \$_ANDNOT_  _21_ (
    .A(data_in[2]),
    .B(_02_),
    .Y(_06_)
  );
  \$_XOR_  _22_ (
    .A(_06_),
    .B(data_in[3]),
    .Y(data_out[3])
  );
  \$_XOR_  _23_ (
    .A(_03_),
    .B(data_in[4]),
    .Y(data_out[4])
  );
  \$_AND_  _24_ (
    .A(_03_),
    .B(data_in[4]),
    .Y(_07_)
  );
  \$_XOR_  _25_ (
    .A(_07_),
    .B(data_in[5]),
    .Y(data_out[5])
  );
  assign packet = { data_in, tag_in };
  assign { tag_out[2], tag_out[0] } = { tag_in[2], tag_in[0] };
endmodule

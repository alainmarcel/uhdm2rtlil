/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* dynports =  1  *)
(* src = "dut.sv:1.1-23.10" *)
(* top =  1  *)
module simple_always_ifelse(clk, rst_n, unit_result, result);
  (* src = "dut.sv:4.33-4.36" *)
  input clk;
  wire clk;
  (* src = "dut.sv:5.33-5.38" *)
  input rst_n;
  wire rst_n;
  (* src = "dut.sv:6.35-6.46" *)
  input [7:0] unit_result;
  wire [7:0] unit_result;
  (* src = "dut.sv:7.33-7.39" *)
  output [31:0] result;
  wire [31:0] result;
  \$_AND_  _0_ (
    .A(unit_result[1]),
    .B(rst_n),
    .Y(result[25])
  );
  \$_AND_  _1_ (
    .A(unit_result[2]),
    .B(rst_n),
    .Y(result[26])
  );
  \$_AND_  _2_ (
    .A(unit_result[3]),
    .B(rst_n),
    .Y(result[27])
  );
  \$_AND_  _3_ (
    .A(unit_result[4]),
    .B(rst_n),
    .Y(result[28])
  );
  \$_AND_  _4_ (
    .A(unit_result[5]),
    .B(rst_n),
    .Y(result[29])
  );
  \$_AND_  _5_ (
    .A(unit_result[6]),
    .B(rst_n),
    .Y(result[30])
  );
  \$_AND_  _6_ (
    .A(unit_result[7]),
    .B(rst_n),
    .Y(result[31])
  );
  \$_AND_  _7_ (
    .A(rst_n),
    .B(unit_result[0]),
    .Y(result[24])
  );
  assign result[23:0] = { result[31:24], result[31:24], result[31:24] };
endmodule

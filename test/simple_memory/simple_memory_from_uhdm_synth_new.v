/* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* dynports =  1  *)
(* src = "dut.sv:1.1-36.10" *)
module simple_memory(clk, rst, we, addr, data_in, data_out);
  reg \$auto$verilog_backend.cc:2373:dump_module$9  = 0;
  wire _0_;
  wire _1_;
  wire [7:0] _2_;
  wire [7:0] _3_;
  (* src = "dut.sv:9.34-9.38" *)
  input [3:0] addr;
  wire [3:0] addr;
  (* src = "dut.sv:6.34-6.37" *)
  input clk;
  wire clk;
  (* src = "dut.sv:10.34-10.41" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "dut.sv:11.34-11.42" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "dut.sv:18.13-18.14" *)
  wire [31:0] i;
  wire [7:0] memrd_memory_DATA;
  (* src = "dut.sv:7.34-7.37" *)
  input rst;
  wire rst;
  (* src = "dut.sv:8.34-8.36" *)
  input we;
  wire we;
  (* src = "dut.sv:15.21-15.27" *)
  reg [7:0] memory [15:0];
  assign memrd_memory_DATA = memory[addr];
  assign _0_ = ~ rst;
  assign _2_ = rst ? 8'h00 : data_out;
  assign _3_ = _0_ ? memrd_memory_DATA : data_out;
  assign _1_ = _0_ & we;
  always @* begin
    if (\$auto$verilog_backend.cc:2373:dump_module$9 ) begin end
  end
  always @(posedge clk) begin
      data_out <= _2_;
      data_out <= _3_;
  end
endmodule

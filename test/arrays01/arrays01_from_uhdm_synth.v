/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* src = "dut.sv:1.1-16.10" *)
(* top =  1  *)
module arrays01(clock, we, addr, wr_data, rd_data);
  (* src = "dut.sv:1.17-1.22" *)
  input clock;
  wire clock;
  (* src = "dut.sv:1.24-1.26" *)
  input we;
  wire we;
  (* src = "dut.sv:1.28-1.32" *)
  input [3:0] addr;
  wire [3:0] addr;
  (* src = "dut.sv:1.34-1.41" *)
  input [3:0] wr_data;
  wire [3:0] wr_data;
  (* src = "dut.sv:1.43-1.50" *)
  output [3:0] rd_data;
  wire [3:0] rd_data;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire [3:0] \memory[0] ;
  wire [3:0] \memory[10] ;
  wire [3:0] \memory[11] ;
  wire [3:0] \memory[12] ;
  wire [3:0] \memory[13] ;
  wire [3:0] \memory[14] ;
  wire [3:0] \memory[15] ;
  wire [3:0] \memory[1] ;
  wire [3:0] \memory[2] ;
  wire [3:0] \memory[3] ;
  wire [3:0] \memory[4] ;
  wire [3:0] \memory[5] ;
  wire [3:0] \memory[6] ;
  wire [3:0] \memory[7] ;
  wire [3:0] \memory[8] ;
  wire [3:0] \memory[9] ;
  wire [3:0] memrd_memory_DATA;
  \$_MUX_  _096_ (
    .A(\memory[0] [0]),
    .B(\memory[1] [0]),
    .S(addr[0]),
    .Y(_089_)
  );
  \$_MUX_  _097_ (
    .A(\memory[2] [0]),
    .B(\memory[3] [0]),
    .S(addr[0]),
    .Y(_090_)
  );
  \$_MUX_  _098_ (
    .A(_089_),
    .B(_090_),
    .S(addr[1]),
    .Y(_091_)
  );
  \$_MUX_  _099_ (
    .A(\memory[4] [0]),
    .B(\memory[5] [0]),
    .S(addr[0]),
    .Y(_092_)
  );
  \$_MUX_  _100_ (
    .A(\memory[6] [0]),
    .B(\memory[7] [0]),
    .S(addr[0]),
    .Y(_093_)
  );
  \$_MUX_  _101_ (
    .A(_092_),
    .B(_093_),
    .S(addr[1]),
    .Y(_094_)
  );
  \$_MUX_  _102_ (
    .A(_091_),
    .B(_094_),
    .S(addr[2]),
    .Y(_095_)
  );
  \$_MUX_  _103_ (
    .A(\memory[8] [0]),
    .B(\memory[9] [0]),
    .S(addr[0]),
    .Y(_016_)
  );
  \$_MUX_  _104_ (
    .A(\memory[10] [0]),
    .B(\memory[11] [0]),
    .S(addr[0]),
    .Y(_017_)
  );
  \$_MUX_  _105_ (
    .A(_016_),
    .B(_017_),
    .S(addr[1]),
    .Y(_018_)
  );
  \$_MUX_  _106_ (
    .A(\memory[12] [0]),
    .B(\memory[13] [0]),
    .S(addr[0]),
    .Y(_019_)
  );
  \$_MUX_  _107_ (
    .A(\memory[14] [0]),
    .B(\memory[15] [0]),
    .S(addr[0]),
    .Y(_020_)
  );
  \$_MUX_  _108_ (
    .A(_019_),
    .B(_020_),
    .S(addr[1]),
    .Y(_021_)
  );
  \$_MUX_  _109_ (
    .A(_018_),
    .B(_021_),
    .S(addr[2]),
    .Y(_022_)
  );
  \$_MUX_  _110_ (
    .A(_095_),
    .B(_022_),
    .S(addr[3]),
    .Y(rd_data[0])
  );
  \$_MUX_  _111_ (
    .A(\memory[0] [1]),
    .B(\memory[1] [1]),
    .S(addr[0]),
    .Y(_023_)
  );
  \$_MUX_  _112_ (
    .A(\memory[2] [1]),
    .B(\memory[3] [1]),
    .S(addr[0]),
    .Y(_024_)
  );
  \$_MUX_  _113_ (
    .A(_023_),
    .B(_024_),
    .S(addr[1]),
    .Y(_025_)
  );
  \$_MUX_  _114_ (
    .A(\memory[4] [1]),
    .B(\memory[5] [1]),
    .S(addr[0]),
    .Y(_026_)
  );
  \$_MUX_  _115_ (
    .A(\memory[6] [1]),
    .B(\memory[7] [1]),
    .S(addr[0]),
    .Y(_027_)
  );
  \$_MUX_  _116_ (
    .A(_026_),
    .B(_027_),
    .S(addr[1]),
    .Y(_028_)
  );
  \$_MUX_  _117_ (
    .A(_025_),
    .B(_028_),
    .S(addr[2]),
    .Y(_029_)
  );
  \$_MUX_  _118_ (
    .A(\memory[8] [1]),
    .B(\memory[9] [1]),
    .S(addr[0]),
    .Y(_030_)
  );
  \$_MUX_  _119_ (
    .A(\memory[10] [1]),
    .B(\memory[11] [1]),
    .S(addr[0]),
    .Y(_031_)
  );
  \$_MUX_  _120_ (
    .A(_030_),
    .B(_031_),
    .S(addr[1]),
    .Y(_032_)
  );
  \$_MUX_  _121_ (
    .A(\memory[12] [1]),
    .B(\memory[13] [1]),
    .S(addr[0]),
    .Y(_033_)
  );
  \$_MUX_  _122_ (
    .A(\memory[14] [1]),
    .B(\memory[15] [1]),
    .S(addr[0]),
    .Y(_034_)
  );
  \$_MUX_  _123_ (
    .A(_033_),
    .B(_034_),
    .S(addr[1]),
    .Y(_035_)
  );
  \$_MUX_  _124_ (
    .A(_032_),
    .B(_035_),
    .S(addr[2]),
    .Y(_036_)
  );
  \$_MUX_  _125_ (
    .A(_029_),
    .B(_036_),
    .S(addr[3]),
    .Y(rd_data[1])
  );
  \$_MUX_  _126_ (
    .A(\memory[0] [2]),
    .B(\memory[1] [2]),
    .S(addr[0]),
    .Y(_037_)
  );
  \$_MUX_  _127_ (
    .A(\memory[2] [2]),
    .B(\memory[3] [2]),
    .S(addr[0]),
    .Y(_038_)
  );
  \$_MUX_  _128_ (
    .A(_037_),
    .B(_038_),
    .S(addr[1]),
    .Y(_039_)
  );
  \$_MUX_  _129_ (
    .A(\memory[4] [2]),
    .B(\memory[5] [2]),
    .S(addr[0]),
    .Y(_040_)
  );
  \$_MUX_  _130_ (
    .A(\memory[6] [2]),
    .B(\memory[7] [2]),
    .S(addr[0]),
    .Y(_041_)
  );
  \$_MUX_  _131_ (
    .A(_040_),
    .B(_041_),
    .S(addr[1]),
    .Y(_042_)
  );
  \$_MUX_  _132_ (
    .A(_039_),
    .B(_042_),
    .S(addr[2]),
    .Y(_043_)
  );
  \$_MUX_  _133_ (
    .A(\memory[8] [2]),
    .B(\memory[9] [2]),
    .S(addr[0]),
    .Y(_044_)
  );
  \$_MUX_  _134_ (
    .A(\memory[10] [2]),
    .B(\memory[11] [2]),
    .S(addr[0]),
    .Y(_045_)
  );
  \$_MUX_  _135_ (
    .A(_044_),
    .B(_045_),
    .S(addr[1]),
    .Y(_046_)
  );
  \$_MUX_  _136_ (
    .A(\memory[12] [2]),
    .B(\memory[13] [2]),
    .S(addr[0]),
    .Y(_047_)
  );
  \$_MUX_  _137_ (
    .A(\memory[14] [2]),
    .B(\memory[15] [2]),
    .S(addr[0]),
    .Y(_048_)
  );
  \$_MUX_  _138_ (
    .A(_047_),
    .B(_048_),
    .S(addr[1]),
    .Y(_049_)
  );
  \$_MUX_  _139_ (
    .A(_046_),
    .B(_049_),
    .S(addr[2]),
    .Y(_050_)
  );
  \$_MUX_  _140_ (
    .A(_043_),
    .B(_050_),
    .S(addr[3]),
    .Y(rd_data[2])
  );
  \$_MUX_  _141_ (
    .A(\memory[0] [3]),
    .B(\memory[1] [3]),
    .S(addr[0]),
    .Y(_051_)
  );
  \$_MUX_  _142_ (
    .A(\memory[2] [3]),
    .B(\memory[3] [3]),
    .S(addr[0]),
    .Y(_052_)
  );
  \$_MUX_  _143_ (
    .A(_051_),
    .B(_052_),
    .S(addr[1]),
    .Y(_053_)
  );
  \$_MUX_  _144_ (
    .A(\memory[4] [3]),
    .B(\memory[5] [3]),
    .S(addr[0]),
    .Y(_054_)
  );
  \$_MUX_  _145_ (
    .A(\memory[6] [3]),
    .B(\memory[7] [3]),
    .S(addr[0]),
    .Y(_055_)
  );
  \$_MUX_  _146_ (
    .A(_054_),
    .B(_055_),
    .S(addr[1]),
    .Y(_056_)
  );
  \$_MUX_  _147_ (
    .A(_053_),
    .B(_056_),
    .S(addr[2]),
    .Y(_057_)
  );
  \$_MUX_  _148_ (
    .A(\memory[8] [3]),
    .B(\memory[9] [3]),
    .S(addr[0]),
    .Y(_058_)
  );
  \$_MUX_  _149_ (
    .A(\memory[10] [3]),
    .B(\memory[11] [3]),
    .S(addr[0]),
    .Y(_059_)
  );
  \$_MUX_  _150_ (
    .A(_058_),
    .B(_059_),
    .S(addr[1]),
    .Y(_060_)
  );
  \$_MUX_  _151_ (
    .A(\memory[12] [3]),
    .B(\memory[13] [3]),
    .S(addr[0]),
    .Y(_061_)
  );
  \$_MUX_  _152_ (
    .A(\memory[14] [3]),
    .B(\memory[15] [3]),
    .S(addr[0]),
    .Y(_062_)
  );
  \$_MUX_  _153_ (
    .A(_061_),
    .B(_062_),
    .S(addr[1]),
    .Y(_063_)
  );
  \$_MUX_  _154_ (
    .A(_060_),
    .B(_063_),
    .S(addr[2]),
    .Y(_064_)
  );
  \$_MUX_  _155_ (
    .A(_057_),
    .B(_064_),
    .S(addr[3]),
    .Y(rd_data[3])
  );
  \$_OR_  _156_ (
    .A(addr[0]),
    .B(addr[1]),
    .Y(_065_)
  );
  \$_OR_  _157_ (
    .A(addr[2]),
    .B(addr[3]),
    .Y(_066_)
  );
  \$_OR_  _158_ (
    .A(_066_),
    .B(_065_),
    .Y(_067_)
  );
  \$_ANDNOT_  _159_ (
    .A(we),
    .B(_067_),
    .Y(_000_)
  );
  \$_ORNOT_  _160_ (
    .A(addr[1]),
    .B(addr[0]),
    .Y(_068_)
  );
  \$_OR_  _161_ (
    .A(_068_),
    .B(_066_),
    .Y(_069_)
  );
  \$_ANDNOT_  _162_ (
    .A(we),
    .B(_069_),
    .Y(_007_)
  );
  \$_ORNOT_  _163_ (
    .A(addr[0]),
    .B(addr[1]),
    .Y(_070_)
  );
  \$_OR_  _164_ (
    .A(_070_),
    .B(_066_),
    .Y(_071_)
  );
  \$_ANDNOT_  _165_ (
    .A(we),
    .B(_071_),
    .Y(_008_)
  );
  \$_NAND_  _166_ (
    .A(addr[0]),
    .B(addr[1]),
    .Y(_072_)
  );
  \$_OR_  _167_ (
    .A(_072_),
    .B(_066_),
    .Y(_073_)
  );
  \$_ANDNOT_  _168_ (
    .A(we),
    .B(_073_),
    .Y(_009_)
  );
  \$_ORNOT_  _169_ (
    .A(addr[3]),
    .B(addr[2]),
    .Y(_074_)
  );
  \$_OR_  _170_ (
    .A(_074_),
    .B(_065_),
    .Y(_075_)
  );
  \$_ANDNOT_  _171_ (
    .A(we),
    .B(_075_),
    .Y(_010_)
  );
  \$_OR_  _172_ (
    .A(_074_),
    .B(_068_),
    .Y(_076_)
  );
  \$_ANDNOT_  _173_ (
    .A(we),
    .B(_076_),
    .Y(_011_)
  );
  \$_OR_  _174_ (
    .A(_074_),
    .B(_070_),
    .Y(_077_)
  );
  \$_ANDNOT_  _175_ (
    .A(we),
    .B(_077_),
    .Y(_012_)
  );
  \$_OR_  _176_ (
    .A(_074_),
    .B(_072_),
    .Y(_078_)
  );
  \$_ANDNOT_  _177_ (
    .A(we),
    .B(_078_),
    .Y(_013_)
  );
  \$_ORNOT_  _178_ (
    .A(addr[2]),
    .B(addr[3]),
    .Y(_079_)
  );
  \$_OR_  _179_ (
    .A(_079_),
    .B(_065_),
    .Y(_080_)
  );
  \$_ANDNOT_  _180_ (
    .A(we),
    .B(_080_),
    .Y(_014_)
  );
  \$_OR_  _181_ (
    .A(_079_),
    .B(_068_),
    .Y(_081_)
  );
  \$_ANDNOT_  _182_ (
    .A(we),
    .B(_081_),
    .Y(_015_)
  );
  \$_OR_  _183_ (
    .A(_079_),
    .B(_070_),
    .Y(_082_)
  );
  \$_ANDNOT_  _184_ (
    .A(we),
    .B(_082_),
    .Y(_001_)
  );
  \$_OR_  _185_ (
    .A(_079_),
    .B(_072_),
    .Y(_083_)
  );
  \$_ANDNOT_  _186_ (
    .A(we),
    .B(_083_),
    .Y(_002_)
  );
  \$_NAND_  _187_ (
    .A(addr[2]),
    .B(addr[3]),
    .Y(_084_)
  );
  \$_OR_  _188_ (
    .A(_084_),
    .B(_065_),
    .Y(_085_)
  );
  \$_ANDNOT_  _189_ (
    .A(we),
    .B(_085_),
    .Y(_003_)
  );
  \$_OR_  _190_ (
    .A(_084_),
    .B(_068_),
    .Y(_086_)
  );
  \$_ANDNOT_  _191_ (
    .A(we),
    .B(_086_),
    .Y(_004_)
  );
  \$_OR_  _192_ (
    .A(_084_),
    .B(_070_),
    .Y(_087_)
  );
  \$_ANDNOT_  _193_ (
    .A(we),
    .B(_087_),
    .Y(_005_)
  );
  \$_OR_  _194_ (
    .A(_084_),
    .B(_072_),
    .Y(_088_)
  );
  \$_ANDNOT_  _195_ (
    .A(we),
    .B(_088_),
    .Y(_006_)
  );
  \$_DFFE_PP_  \memory_reg[3][0]  /* _196_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_009_),
    .Q(\memory[3] [0])
  );
  \$_DFFE_PP_  \memory_reg[3][1]  /* _197_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_009_),
    .Q(\memory[3] [1])
  );
  \$_DFFE_PP_  \memory_reg[3][2]  /* _198_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_009_),
    .Q(\memory[3] [2])
  );
  \$_DFFE_PP_  \memory_reg[3][3]  /* _199_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_009_),
    .Q(\memory[3] [3])
  );
  \$_DFFE_PP_  \memory_reg[2][0]  /* _200_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_008_),
    .Q(\memory[2] [0])
  );
  \$_DFFE_PP_  \memory_reg[2][1]  /* _201_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_008_),
    .Q(\memory[2] [1])
  );
  \$_DFFE_PP_  \memory_reg[2][2]  /* _202_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_008_),
    .Q(\memory[2] [2])
  );
  \$_DFFE_PP_  \memory_reg[2][3]  /* _203_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_008_),
    .Q(\memory[2] [3])
  );
  \$_DFFE_PP_  \memory_reg[15][0]  /* _204_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_006_),
    .Q(\memory[15] [0])
  );
  \$_DFFE_PP_  \memory_reg[15][1]  /* _205_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_006_),
    .Q(\memory[15] [1])
  );
  \$_DFFE_PP_  \memory_reg[15][2]  /* _206_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_006_),
    .Q(\memory[15] [2])
  );
  \$_DFFE_PP_  \memory_reg[15][3]  /* _207_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_006_),
    .Q(\memory[15] [3])
  );
  \$_DFFE_PP_  \memory_reg[1][0]  /* _208_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_007_),
    .Q(\memory[1] [0])
  );
  \$_DFFE_PP_  \memory_reg[1][1]  /* _209_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_007_),
    .Q(\memory[1] [1])
  );
  \$_DFFE_PP_  \memory_reg[1][2]  /* _210_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_007_),
    .Q(\memory[1] [2])
  );
  \$_DFFE_PP_  \memory_reg[1][3]  /* _211_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_007_),
    .Q(\memory[1] [3])
  );
  \$_DFFE_PP_  \memory_reg[4][0]  /* _212_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_010_),
    .Q(\memory[4] [0])
  );
  \$_DFFE_PP_  \memory_reg[4][1]  /* _213_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_010_),
    .Q(\memory[4] [1])
  );
  \$_DFFE_PP_  \memory_reg[4][2]  /* _214_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_010_),
    .Q(\memory[4] [2])
  );
  \$_DFFE_PP_  \memory_reg[4][3]  /* _215_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_010_),
    .Q(\memory[4] [3])
  );
  \$_DFFE_PP_  \memory_reg[5][0]  /* _216_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_011_),
    .Q(\memory[5] [0])
  );
  \$_DFFE_PP_  \memory_reg[5][1]  /* _217_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_011_),
    .Q(\memory[5] [1])
  );
  \$_DFFE_PP_  \memory_reg[5][2]  /* _218_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_011_),
    .Q(\memory[5] [2])
  );
  \$_DFFE_PP_  \memory_reg[5][3]  /* _219_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_011_),
    .Q(\memory[5] [3])
  );
  \$_DFFE_PP_  \memory_reg[6][0]  /* _220_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_012_),
    .Q(\memory[6] [0])
  );
  \$_DFFE_PP_  \memory_reg[6][1]  /* _221_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_012_),
    .Q(\memory[6] [1])
  );
  \$_DFFE_PP_  \memory_reg[6][2]  /* _222_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_012_),
    .Q(\memory[6] [2])
  );
  \$_DFFE_PP_  \memory_reg[6][3]  /* _223_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_012_),
    .Q(\memory[6] [3])
  );
  \$_DFFE_PP_  \memory_reg[7][0]  /* _224_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_013_),
    .Q(\memory[7] [0])
  );
  \$_DFFE_PP_  \memory_reg[7][1]  /* _225_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_013_),
    .Q(\memory[7] [1])
  );
  \$_DFFE_PP_  \memory_reg[7][2]  /* _226_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_013_),
    .Q(\memory[7] [2])
  );
  \$_DFFE_PP_  \memory_reg[7][3]  /* _227_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_013_),
    .Q(\memory[7] [3])
  );
  \$_DFFE_PP_  \memory_reg[8][0]  /* _228_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_014_),
    .Q(\memory[8] [0])
  );
  \$_DFFE_PP_  \memory_reg[8][1]  /* _229_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_014_),
    .Q(\memory[8] [1])
  );
  \$_DFFE_PP_  \memory_reg[8][2]  /* _230_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_014_),
    .Q(\memory[8] [2])
  );
  \$_DFFE_PP_  \memory_reg[8][3]  /* _231_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_014_),
    .Q(\memory[8] [3])
  );
  \$_DFFE_PP_  \memory_reg[0][0]  /* _232_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_000_),
    .Q(\memory[0] [0])
  );
  \$_DFFE_PP_  \memory_reg[0][1]  /* _233_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_000_),
    .Q(\memory[0] [1])
  );
  \$_DFFE_PP_  \memory_reg[0][2]  /* _234_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_000_),
    .Q(\memory[0] [2])
  );
  \$_DFFE_PP_  \memory_reg[0][3]  /* _235_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_000_),
    .Q(\memory[0] [3])
  );
  \$_DFFE_PP_  \memory_reg[10][0]  /* _236_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_001_),
    .Q(\memory[10] [0])
  );
  \$_DFFE_PP_  \memory_reg[10][1]  /* _237_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_001_),
    .Q(\memory[10] [1])
  );
  \$_DFFE_PP_  \memory_reg[10][2]  /* _238_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_001_),
    .Q(\memory[10] [2])
  );
  \$_DFFE_PP_  \memory_reg[10][3]  /* _239_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_001_),
    .Q(\memory[10] [3])
  );
  \$_DFFE_PP_  \memory_reg[11][0]  /* _240_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_002_),
    .Q(\memory[11] [0])
  );
  \$_DFFE_PP_  \memory_reg[11][1]  /* _241_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_002_),
    .Q(\memory[11] [1])
  );
  \$_DFFE_PP_  \memory_reg[11][2]  /* _242_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_002_),
    .Q(\memory[11] [2])
  );
  \$_DFFE_PP_  \memory_reg[11][3]  /* _243_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_002_),
    .Q(\memory[11] [3])
  );
  \$_DFFE_PP_  \memory_reg[12][0]  /* _244_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_003_),
    .Q(\memory[12] [0])
  );
  \$_DFFE_PP_  \memory_reg[12][1]  /* _245_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_003_),
    .Q(\memory[12] [1])
  );
  \$_DFFE_PP_  \memory_reg[12][2]  /* _246_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_003_),
    .Q(\memory[12] [2])
  );
  \$_DFFE_PP_  \memory_reg[12][3]  /* _247_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_003_),
    .Q(\memory[12] [3])
  );
  \$_DFFE_PP_  \memory_reg[13][0]  /* _248_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_004_),
    .Q(\memory[13] [0])
  );
  \$_DFFE_PP_  \memory_reg[13][1]  /* _249_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_004_),
    .Q(\memory[13] [1])
  );
  \$_DFFE_PP_  \memory_reg[13][2]  /* _250_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_004_),
    .Q(\memory[13] [2])
  );
  \$_DFFE_PP_  \memory_reg[13][3]  /* _251_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_004_),
    .Q(\memory[13] [3])
  );
  \$_DFFE_PP_  \memory_reg[14][0]  /* _252_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_005_),
    .Q(\memory[14] [0])
  );
  \$_DFFE_PP_  \memory_reg[14][1]  /* _253_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_005_),
    .Q(\memory[14] [1])
  );
  \$_DFFE_PP_  \memory_reg[14][2]  /* _254_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_005_),
    .Q(\memory[14] [2])
  );
  \$_DFFE_PP_  \memory_reg[14][3]  /* _255_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_005_),
    .Q(\memory[14] [3])
  );
  \$_DFFE_PP_  \memory_reg[9][0]  /* _256_ */ (
    .C(clock),
    .D(wr_data[0]),
    .E(_015_),
    .Q(\memory[9] [0])
  );
  \$_DFFE_PP_  \memory_reg[9][1]  /* _257_ */ (
    .C(clock),
    .D(wr_data[1]),
    .E(_015_),
    .Q(\memory[9] [1])
  );
  \$_DFFE_PP_  \memory_reg[9][2]  /* _258_ */ (
    .C(clock),
    .D(wr_data[2]),
    .E(_015_),
    .Q(\memory[9] [2])
  );
  \$_DFFE_PP_  \memory_reg[9][3]  /* _259_ */ (
    .C(clock),
    .D(wr_data[3]),
    .E(_015_),
    .Q(\memory[9] [3])
  );
  assign memrd_memory_DATA = rd_data;
endmodule

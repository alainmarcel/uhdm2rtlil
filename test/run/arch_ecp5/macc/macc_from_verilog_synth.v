/* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* dynports =  1  *)
(* top =  1  *)
(* src = "dut.sv:4.1-25.10" *)
module top(clk, a, b, c, set);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:200.24-200.25" *)
  (* unused_bits = "1 2 3 4 5 6" *)
  wire [6:0] _093_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:200.24-200.25" *)
  (* unused_bits = "2 3 4 5 6" *)
  wire [6:0] _094_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:200.24-200.25" *)
  (* unused_bits = "3 4 5 6" *)
  wire [6:0] _095_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:270.23-270.24" *)
  (* unused_bits = "4 5 6" *)
  wire [6:0] _096_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [6:0] _097_;
  (* src = "dut.sv:9.32-9.33" *)
  input [3:0] a;
  wire [3:0] a;
  (* src = "dut.sv:10.32-10.33" *)
  input [2:0] b;
  wire [2:0] b;
  (* src = "dut.sv:11.43-11.44" *)
  output [6:0] c;
  wire [6:0] c;
  (* src = "dut.sv:8.7-8.10" *)
  input clk;
  wire clk;
  (* src = "dut.sv:12.33-12.42" *)
  wire [6:0] reg_tmp_c;
  (* src = "dut.sv:7.7-7.10" *)
  input set;
  wire set;
  \$_NOT_  _098_ (
    .A(reg_tmp_c[0]),
    .Y(_020_)
  );
  \$_NAND_  _099_ (
    .A(b[0]),
    .B(a[0]),
    .Y(_021_)
  );
  \$_XOR_  _100_ (
    .A(_021_),
    .B(_020_),
    .Y(_093_[0])
  );
  \$_AND_  _101_ (
    .A(b[0]),
    .B(a[1]),
    .Y(_022_)
  );
  \$_XOR_  _102_ (
    .A(_022_),
    .B(reg_tmp_c[1]),
    .Y(_023_)
  );
  \$_NAND_  _103_ (
    .A(b[1]),
    .B(a[0]),
    .Y(_024_)
  );
  \$_XOR_  _104_ (
    .A(_024_),
    .B(_023_),
    .Y(_025_)
  );
  \$_OR_  _105_ (
    .A(_021_),
    .B(_020_),
    .Y(_026_)
  );
  \$_XOR_  _106_ (
    .A(_026_),
    .B(_025_),
    .Y(_094_[1])
  );
  \$_XOR_  _107_ (
    .A(reg_tmp_c[2]),
    .B(b[2]),
    .Y(_027_)
  );
  \$_NAND_  _108_ (
    .A(b[0]),
    .B(a[2]),
    .Y(_028_)
  );
  \$_XOR_  _109_ (
    .A(_028_),
    .B(_027_),
    .Y(_029_)
  );
  \$_NAND_  _110_ (
    .A(_022_),
    .B(reg_tmp_c[1]),
    .Y(_030_)
  );
  \$_ANDNOT_  _111_ (
    .A(_023_),
    .B(_024_),
    .Y(_031_)
  );
  \$_ANDNOT_  _112_ (
    .A(_030_),
    .B(_031_),
    .Y(_032_)
  );
  \$_XOR_  _113_ (
    .A(_032_),
    .B(_029_),
    .Y(_033_)
  );
  \$_NAND_  _114_ (
    .A(b[1]),
    .B(a[1]),
    .Y(_034_)
  );
  \$_XOR_  _115_ (
    .A(_034_),
    .B(_033_),
    .Y(_035_)
  );
  \$_OR_  _116_ (
    .A(_026_),
    .B(_025_),
    .Y(_036_)
  );
  \$_XOR_  _117_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  \$_ANDNOT_  _118_ (
    .A(b[2]),
    .B(a[0]),
    .Y(_038_)
  );
  \$_XOR_  _119_ (
    .A(_038_),
    .B(_037_),
    .Y(_095_[2])
  );
  \$_AND_  _120_ (
    .A(b[0]),
    .B(a[3]),
    .Y(_039_)
  );
  \$_XOR_  _121_ (
    .A(_039_),
    .B(reg_tmp_c[4]),
    .Y(_040_)
  );
  \$_AND_  _122_ (
    .A(b[1]),
    .B(a[3]),
    .Y(_041_)
  );
  \$_NOT_  _123_ (
    .A(_041_),
    .Y(_042_)
  );
  \$_XOR_  _124_ (
    .A(_042_),
    .B(_040_),
    .Y(_043_)
  );
  \$_NOT_  _125_ (
    .A(reg_tmp_c[3]),
    .Y(_044_)
  );
  \$_NAND_  _126_ (
    .A(b[0]),
    .B(a[3]),
    .Y(_045_)
  );
  \$_OR_  _127_ (
    .A(_045_),
    .B(_044_),
    .Y(_046_)
  );
  \$_AND_  _128_ (
    .A(b[1]),
    .B(a[2]),
    .Y(_047_)
  );
  \$_XOR_  _129_ (
    .A(_039_),
    .B(_044_),
    .Y(_048_)
  );
  \$_ANDNOT_  _130_ (
    .A(_047_),
    .B(_048_),
    .Y(_049_)
  );
  \$_ANDNOT_  _131_ (
    .A(_046_),
    .B(_049_),
    .Y(_050_)
  );
  \$_XOR_  _132_ (
    .A(_050_),
    .B(_043_),
    .Y(_051_)
  );
  \$_ORNOT_  _133_ (
    .A(a[2]),
    .B(b[2]),
    .Y(_052_)
  );
  \$_XNOR_  _134_ (
    .A(_052_),
    .B(_051_),
    .Y(_053_)
  );
  \$_XNOR_  _135_ (
    .A(_048_),
    .B(_047_),
    .Y(_054_)
  );
  \$_NAND_  _136_ (
    .A(reg_tmp_c[2]),
    .B(b[2]),
    .Y(_055_)
  );
  \$_ANDNOT_  _137_ (
    .A(_027_),
    .B(_028_),
    .Y(_056_)
  );
  \$_ANDNOT_  _138_ (
    .A(_055_),
    .B(_056_),
    .Y(_057_)
  );
  \$_ORNOT_  _139_ (
    .A(_057_),
    .B(_054_),
    .Y(_058_)
  );
  \$_ANDNOT_  _140_ (
    .A(b[2]),
    .B(a[1]),
    .Y(_059_)
  );
  \$_XOR_  _141_ (
    .A(_057_),
    .B(_054_),
    .Y(_060_)
  );
  \$_ANDNOT_  _142_ (
    .A(_059_),
    .B(_060_),
    .Y(_061_)
  );
  \$_ANDNOT_  _143_ (
    .A(_058_),
    .B(_061_),
    .Y(_062_)
  );
  \$_XOR_  _144_ (
    .A(_062_),
    .B(_053_),
    .Y(_063_)
  );
  \$_XOR_  _145_ (
    .A(_060_),
    .B(_059_),
    .Y(_064_)
  );
  \$_OR_  _146_ (
    .A(_032_),
    .B(_029_),
    .Y(_065_)
  );
  \$_ANDNOT_  _147_ (
    .A(_033_),
    .B(_034_),
    .Y(_066_)
  );
  \$_ANDNOT_  _148_ (
    .A(_065_),
    .B(_066_),
    .Y(_067_)
  );
  \$_OR_  _149_ (
    .A(_067_),
    .B(_064_),
    .Y(_068_)
  );
  \$_XNOR_  _150_ (
    .A(_068_),
    .B(_063_),
    .Y(_069_)
  );
  \$_XNOR_  _151_ (
    .A(_067_),
    .B(_064_),
    .Y(_070_)
  );
  \$_OR_  _152_ (
    .A(_036_),
    .B(_035_),
    .Y(_071_)
  );
  \$_AND_  _153_ (
    .A(_038_),
    .B(_037_),
    .Y(_072_)
  );
  \$_ANDNOT_  _154_ (
    .A(_071_),
    .B(_072_),
    .Y(_073_)
  );
  \$_NOR_  _155_ (
    .A(_073_),
    .B(_070_),
    .Y(_074_)
  );
  \$_XNOR_  _156_ (
    .A(_074_),
    .B(_069_),
    .Y(_097_[4])
  );
  \$_NOT_  _157_ (
    .A(reg_tmp_c[5]),
    .Y(_075_)
  );
  \$_XOR_  _158_ (
    .A(_039_),
    .B(_075_),
    .Y(_076_)
  );
  \$_XOR_  _159_ (
    .A(_076_),
    .B(_041_),
    .Y(_077_)
  );
  \$_NAND_  _160_ (
    .A(_039_),
    .B(reg_tmp_c[4]),
    .Y(_078_)
  );
  \$_ANDNOT_  _161_ (
    .A(_040_),
    .B(_042_),
    .Y(_079_)
  );
  \$_ANDNOT_  _162_ (
    .A(_078_),
    .B(_079_),
    .Y(_080_)
  );
  \$_XOR_  _163_ (
    .A(_080_),
    .B(_077_),
    .Y(_081_)
  );
  \$_ANDNOT_  _164_ (
    .A(b[2]),
    .B(a[3]),
    .Y(_082_)
  );
  \$_XOR_  _165_ (
    .A(_082_),
    .B(_081_),
    .Y(_083_)
  );
  \$_OR_  _166_ (
    .A(_050_),
    .B(_043_),
    .Y(_084_)
  );
  \$_ANDNOT_  _167_ (
    .A(_051_),
    .B(_052_),
    .Y(_085_)
  );
  \$_ANDNOT_  _168_ (
    .A(_084_),
    .B(_085_),
    .Y(_086_)
  );
  \$_XOR_  _169_ (
    .A(_086_),
    .B(_083_),
    .Y(_087_)
  );
  \$_ORNOT_  _170_ (
    .A(_062_),
    .B(_053_),
    .Y(_088_)
  );
  \$_XNOR_  _171_ (
    .A(_088_),
    .B(_087_),
    .Y(_089_)
  );
  \$_OR_  _172_ (
    .A(_068_),
    .B(_063_),
    .Y(_090_)
  );
  \$_ANDNOT_  _173_ (
    .A(_074_),
    .B(_069_),
    .Y(_091_)
  );
  \$_ANDNOT_  _174_ (
    .A(_090_),
    .B(_091_),
    .Y(_092_)
  );
  \$_XOR_  _175_ (
    .A(_092_),
    .B(_089_),
    .Y(_097_[5])
  );
  \$_NOT_  _176_ (
    .A(_082_),
    .Y(_000_)
  );
  \$_XOR_  _177_ (
    .A(_045_),
    .B(reg_tmp_c[6]),
    .Y(_001_)
  );
  \$_XOR_  _178_ (
    .A(_001_),
    .B(_042_),
    .Y(_002_)
  );
  \$_OR_  _179_ (
    .A(_045_),
    .B(_075_),
    .Y(_003_)
  );
  \$_ANDNOT_  _180_ (
    .A(_041_),
    .B(_076_),
    .Y(_004_)
  );
  \$_ANDNOT_  _181_ (
    .A(_003_),
    .B(_004_),
    .Y(_005_)
  );
  \$_XOR_  _182_ (
    .A(_005_),
    .B(_002_),
    .Y(_006_)
  );
  \$_XOR_  _183_ (
    .A(_006_),
    .B(_000_),
    .Y(_007_)
  );
  \$_OR_  _184_ (
    .A(_080_),
    .B(_077_),
    .Y(_008_)
  );
  \$_ANDNOT_  _185_ (
    .A(_081_),
    .B(_000_),
    .Y(_009_)
  );
  \$_ANDNOT_  _186_ (
    .A(_008_),
    .B(_009_),
    .Y(_010_)
  );
  \$_XOR_  _187_ (
    .A(_010_),
    .B(_007_),
    .Y(_011_)
  );
  \$_ANDNOT_  _188_ (
    .A(_083_),
    .B(_086_),
    .Y(_012_)
  );
  \$_XOR_  _189_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  \$_OR_  _190_ (
    .A(_088_),
    .B(_087_),
    .Y(_014_)
  );
  \$_NOR_  _191_ (
    .A(_090_),
    .B(_089_),
    .Y(_015_)
  );
  \$_ANDNOT_  _192_ (
    .A(_014_),
    .B(_015_),
    .Y(_016_)
  );
  \$_OR_  _193_ (
    .A(_089_),
    .B(_069_),
    .Y(_017_)
  );
  \$_ANDNOT_  _194_ (
    .A(_074_),
    .B(_017_),
    .Y(_018_)
  );
  \$_ANDNOT_  _195_ (
    .A(_016_),
    .B(_018_),
    .Y(_019_)
  );
  \$_XOR_  _196_ (
    .A(_019_),
    .B(_013_),
    .Y(_097_[6])
  );
  \$_XOR_  _197_ (
    .A(_073_),
    .B(_070_),
    .Y(_096_[3])
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[0]  /* _198_ */ (
    .C(clk),
    .D(_093_[0]),
    .Q(reg_tmp_c[0]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[1]  /* _199_ */ (
    .C(clk),
    .D(_094_[1]),
    .Q(reg_tmp_c[1]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[2]  /* _200_ */ (
    .C(clk),
    .D(_095_[2]),
    .Q(reg_tmp_c[2]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[3]  /* _201_ */ (
    .C(clk),
    .D(_096_[3]),
    .Q(reg_tmp_c[3]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[4]  /* _202_ */ (
    .C(clk),
    .D(_097_[4]),
    .Q(reg_tmp_c[4]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[5]  /* _203_ */ (
    .C(clk),
    .D(_097_[5]),
    .Q(reg_tmp_c[5]),
    .R(set)
  );
  (* src = "dut.sv:14.1-24.4" *)
  \$_SDFF_PP0_  \reg_tmp_c_reg[6]  /* _204_ */ (
    .C(clk),
    .D(_097_[6]),
    .Q(reg_tmp_c[6]),
    .R(set)
  );
  assign _094_[0] = _093_[0];
  assign _095_[1:0] = { _094_[1], _093_[0] };
  assign _096_[2:0] = { _095_[2], _094_[1], _093_[0] };
  assign _097_[3:0] = { _096_[3], _095_[2], _094_[1], _093_[0] };
  assign c = reg_tmp_c;
endmodule

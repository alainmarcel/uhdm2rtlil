/* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* top =  1  *)
(* dynports =  1  *)
(* src = "dut.sv:27.1-47.10" *)
module top2(clk, a, b, c, hold);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:270.23-270.24" *)
  (* unused_bits = "1 2 3 4 5" *)
  wire [11:0] _111_;
  (* force_downto = 32'd1 *)
  (* src = "/home/alain/uhdm2rtlil/out/current/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [11:0] _112_;
  (* src = "dut.sv:27.17-27.18" *)
  input [5:0] a;
  wire [5:0] a;
  (* src = "dut.sv:27.19-27.20" *)
  input [5:0] b;
  wire [5:0] b;
  (* src = "dut.sv:27.21-27.22" *)
  output [11:0] c;
  wire [11:0] c;
  (* src = "dut.sv:27.13-27.16" *)
  input clk;
  wire clk;
  (* src = "dut.sv:27.23-27.27" *)
  input hold;
  wire hold;
  (* \reg  = 32'd1 *)
  (* src = "dut.sv:35.26-35.31" *)
  wire [5:0] reg_a;
  (* \reg  = 32'd1 *)
  (* src = "dut.sv:36.26-36.31" *)
  wire [5:0] reg_b;
  (* \reg  = 32'd1 *)
  (* src = "dut.sv:37.33-37.42" *)
  wire [11:0] reg_tmp_c;
  \$_NAND_  _113_ (
    .A(reg_b[1]),
    .B(reg_a[0]),
    .Y(_051_)
  );
  \$_NAND_  _114_ (
    .A(reg_b[0]),
    .B(reg_a[1]),
    .Y(_052_)
  );
  \$_XNOR_  _115_ (
    .A(_052_),
    .B(_051_),
    .Y(_053_)
  );
  \$_XNOR_  _116_ (
    .A(_053_),
    .B(reg_tmp_c[1]),
    .Y(_054_)
  );
  \$_AND_  _117_ (
    .A(reg_b[0]),
    .B(reg_a[0]),
    .Y(_055_)
  );
  \$_AND_  _118_ (
    .A(_055_),
    .B(reg_tmp_c[0]),
    .Y(_056_)
  );
  \$_XOR_  _119_ (
    .A(_056_),
    .B(_054_),
    .Y(_112_[1])
  );
  \$_NAND_  _120_ (
    .A(reg_b[2]),
    .B(reg_a[0]),
    .Y(_057_)
  );
  \$_NAND_  _121_ (
    .A(reg_b[1]),
    .B(reg_a[1]),
    .Y(_058_)
  );
  \$_XNOR_  _122_ (
    .A(_058_),
    .B(_057_),
    .Y(_059_)
  );
  \$_AND_  _123_ (
    .A(reg_b[0]),
    .B(reg_a[2]),
    .Y(_060_)
  );
  \$_XOR_  _124_ (
    .A(_060_),
    .B(_059_),
    .Y(_061_)
  );
  \$_OR_  _125_ (
    .A(_052_),
    .B(_051_),
    .Y(_062_)
  );
  \$_XNOR_  _126_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  \$_XOR_  _127_ (
    .A(_063_),
    .B(reg_tmp_c[2]),
    .Y(_064_)
  );
  \$_ANDNOT_  _128_ (
    .A(reg_tmp_c[1]),
    .B(_053_),
    .Y(_065_)
  );
  \$_AND_  _129_ (
    .A(_056_),
    .B(_054_),
    .Y(_066_)
  );
  \$_NOR_  _130_ (
    .A(_066_),
    .B(_065_),
    .Y(_067_)
  );
  \$_XOR_  _131_ (
    .A(_067_),
    .B(_064_),
    .Y(_112_[2])
  );
  \$_NAND_  _132_ (
    .A(reg_b[3]),
    .B(reg_a[0]),
    .Y(_068_)
  );
  \$_NAND_  _133_ (
    .A(reg_b[2]),
    .B(reg_a[1]),
    .Y(_069_)
  );
  \$_XOR_  _134_ (
    .A(_069_),
    .B(_068_),
    .Y(_070_)
  );
  \$_NAND_  _135_ (
    .A(reg_b[1]),
    .B(reg_a[2]),
    .Y(_071_)
  );
  \$_XOR_  _136_ (
    .A(_071_),
    .B(_070_),
    .Y(_072_)
  );
  \$_OR_  _137_ (
    .A(_058_),
    .B(_057_),
    .Y(_073_)
  );
  \$_XOR_  _138_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  \$_AND_  _139_ (
    .A(reg_b[0]),
    .B(reg_a[3]),
    .Y(_075_)
  );
  \$_NOT_  _140_ (
    .A(_075_),
    .Y(_076_)
  );
  \$_XOR_  _141_ (
    .A(_076_),
    .B(_074_),
    .Y(_077_)
  );
  \$_ANDNOT_  _142_ (
    .A(_060_),
    .B(_059_),
    .Y(_078_)
  );
  \$_NOT_  _143_ (
    .A(_078_),
    .Y(_079_)
  );
  \$_XOR_  _144_ (
    .A(_079_),
    .B(_077_),
    .Y(_080_)
  );
  \$_OR_  _145_ (
    .A(_062_),
    .B(_061_),
    .Y(_081_)
  );
  \$_XOR_  _146_ (
    .A(_081_),
    .B(_080_),
    .Y(_082_)
  );
  \$_XOR_  _147_ (
    .A(_082_),
    .B(reg_tmp_c[3]),
    .Y(_083_)
  );
  \$_ORNOT_  _148_ (
    .A(_063_),
    .B(reg_tmp_c[2]),
    .Y(_084_)
  );
  \$_NOR_  _149_ (
    .A(_067_),
    .B(_064_),
    .Y(_085_)
  );
  \$_ANDNOT_  _150_ (
    .A(_084_),
    .B(_085_),
    .Y(_086_)
  );
  \$_XOR_  _151_ (
    .A(_086_),
    .B(_083_),
    .Y(_112_[3])
  );
  \$_NAND_  _152_ (
    .A(reg_a[1]),
    .B(reg_b[3]),
    .Y(_087_)
  );
  \$_NAND_  _153_ (
    .A(reg_b[2]),
    .B(reg_a[2]),
    .Y(_088_)
  );
  \$_XOR_  _154_ (
    .A(_088_),
    .B(_087_),
    .Y(_089_)
  );
  \$_NAND_  _155_ (
    .A(reg_b[1]),
    .B(reg_a[3]),
    .Y(_090_)
  );
  \$_XOR_  _156_ (
    .A(_090_),
    .B(_089_),
    .Y(_091_)
  );
  \$_OR_  _157_ (
    .A(_069_),
    .B(_068_),
    .Y(_092_)
  );
  \$_ANDNOT_  _158_ (
    .A(_070_),
    .B(_071_),
    .Y(_093_)
  );
  \$_ANDNOT_  _159_ (
    .A(_092_),
    .B(_093_),
    .Y(_094_)
  );
  \$_XOR_  _160_ (
    .A(_094_),
    .B(_091_),
    .Y(_095_)
  );
  \$_NAND_  _161_ (
    .A(reg_b[0]),
    .B(reg_a[4]),
    .Y(_096_)
  );
  \$_AND_  _162_ (
    .A(reg_b[4]),
    .B(reg_a[0]),
    .Y(_097_)
  );
  \$_XOR_  _163_ (
    .A(_097_),
    .B(_096_),
    .Y(_098_)
  );
  \$_XNOR_  _164_ (
    .A(_098_),
    .B(_095_),
    .Y(_099_)
  );
  \$_OR_  _165_ (
    .A(_073_),
    .B(_072_),
    .Y(_100_)
  );
  \$_ANDNOT_  _166_ (
    .A(_074_),
    .B(_076_),
    .Y(_101_)
  );
  \$_ANDNOT_  _167_ (
    .A(_100_),
    .B(_101_),
    .Y(_102_)
  );
  \$_XOR_  _168_ (
    .A(_102_),
    .B(_099_),
    .Y(_103_)
  );
  \$_OR_  _169_ (
    .A(_079_),
    .B(_077_),
    .Y(_104_)
  );
  \$_XOR_  _170_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  \$_ORNOT_  _171_ (
    .A(_081_),
    .B(_080_),
    .Y(_106_)
  );
  \$_XOR_  _172_ (
    .A(_106_),
    .B(_105_),
    .Y(_107_)
  );
  \$_XOR_  _173_ (
    .A(_107_),
    .B(reg_tmp_c[4]),
    .Y(_108_)
  );
  \$_ANDNOT_  _174_ (
    .A(reg_tmp_c[3]),
    .B(_082_),
    .Y(_109_)
  );
  \$_NOR_  _175_ (
    .A(_084_),
    .B(_083_),
    .Y(_110_)
  );
  \$_OR_  _176_ (
    .A(_110_),
    .B(_109_),
    .Y(_000_)
  );
  \$_NOR_  _177_ (
    .A(_083_),
    .B(_064_),
    .Y(_001_)
  );
  \$_ANDNOT_  _178_ (
    .A(_001_),
    .B(_067_),
    .Y(_002_)
  );
  \$_OR_  _179_ (
    .A(_002_),
    .B(_000_),
    .Y(_003_)
  );
  \$_XNOR_  _180_ (
    .A(_003_),
    .B(_108_),
    .Y(_112_[4])
  );
  \$_NAND_  _181_ (
    .A(reg_a[2]),
    .B(reg_b[3]),
    .Y(_004_)
  );
  \$_AND_  _182_ (
    .A(reg_a[3]),
    .B(reg_b[2]),
    .Y(_005_)
  );
  \$_XOR_  _183_ (
    .A(_005_),
    .B(_004_),
    .Y(_006_)
  );
  \$_AND_  _184_ (
    .A(reg_a[4]),
    .B(reg_b[1]),
    .Y(_007_)
  );
  \$_XOR_  _185_ (
    .A(_007_),
    .B(_006_),
    .Y(_008_)
  );
  \$_OR_  _186_ (
    .A(_088_),
    .B(_087_),
    .Y(_009_)
  );
  \$_ANDNOT_  _187_ (
    .A(_089_),
    .B(_090_),
    .Y(_010_)
  );
  \$_ANDNOT_  _188_ (
    .A(_009_),
    .B(_010_),
    .Y(_011_)
  );
  \$_XOR_  _189_ (
    .A(_011_),
    .B(_008_),
    .Y(_012_)
  );
  \$_NAND_  _190_ (
    .A(reg_a[5]),
    .B(reg_b[0]),
    .Y(_013_)
  );
  \$_AND_  _191_ (
    .A(reg_b[4]),
    .B(reg_a[1]),
    .Y(_014_)
  );
  \$_XOR_  _192_ (
    .A(_014_),
    .B(_013_),
    .Y(_015_)
  );
  \$_AND_  _193_ (
    .A(reg_b[5]),
    .B(reg_a[0]),
    .Y(_016_)
  );
  \$_XOR_  _194_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  \$_XOR_  _195_ (
    .A(_017_),
    .B(_012_),
    .Y(_018_)
  );
  \$_OR_  _196_ (
    .A(_094_),
    .B(_091_),
    .Y(_019_)
  );
  \$_ANDNOT_  _197_ (
    .A(_095_),
    .B(_098_),
    .Y(_020_)
  );
  \$_ANDNOT_  _198_ (
    .A(_019_),
    .B(_020_),
    .Y(_021_)
  );
  \$_XOR_  _199_ (
    .A(_021_),
    .B(_018_),
    .Y(_022_)
  );
  \$_ANDNOT_  _200_ (
    .A(_097_),
    .B(_096_),
    .Y(_023_)
  );
  \$_XOR_  _201_ (
    .A(_023_),
    .B(_022_),
    .Y(_024_)
  );
  \$_ANDNOT_  _202_ (
    .A(_099_),
    .B(_102_),
    .Y(_025_)
  );
  \$_XOR_  _203_ (
    .A(_025_),
    .B(_024_),
    .Y(_026_)
  );
  \$_OR_  _204_ (
    .A(_104_),
    .B(_103_),
    .Y(_027_)
  );
  \$_ANDNOT_  _205_ (
    .A(_105_),
    .B(_106_),
    .Y(_028_)
  );
  \$_ANDNOT_  _206_ (
    .A(_027_),
    .B(_028_),
    .Y(_029_)
  );
  \$_XOR_  _207_ (
    .A(_029_),
    .B(_026_),
    .Y(_030_)
  );
  \$_XOR_  _208_ (
    .A(_030_),
    .B(reg_tmp_c[5]),
    .Y(_031_)
  );
  \$_ORNOT_  _209_ (
    .A(_107_),
    .B(reg_tmp_c[4]),
    .Y(_032_)
  );
  \$_ANDNOT_  _210_ (
    .A(_003_),
    .B(_108_),
    .Y(_033_)
  );
  \$_ANDNOT_  _211_ (
    .A(_032_),
    .B(_033_),
    .Y(_034_)
  );
  \$_XOR_  _212_ (
    .A(_034_),
    .B(_031_),
    .Y(_112_[5])
  );
  \$_ANDNOT_  _213_ (
    .A(reg_tmp_c[5]),
    .B(_030_),
    .Y(_035_)
  );
  \$_OR_  _214_ (
    .A(_032_),
    .B(_031_),
    .Y(_036_)
  );
  \$_ANDNOT_  _215_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  \$_OR_  _216_ (
    .A(_031_),
    .B(_108_),
    .Y(_038_)
  );
  \$_ANDNOT_  _217_ (
    .A(_003_),
    .B(_038_),
    .Y(_039_)
  );
  \$_ANDNOT_  _218_ (
    .A(_037_),
    .B(_039_),
    .Y(_040_)
  );
  \$_XNOR_  _219_ (
    .A(_040_),
    .B(reg_tmp_c[6]),
    .Y(_112_[6])
  );
  \$_ANDNOT_  _220_ (
    .A(reg_tmp_c[6]),
    .B(_040_),
    .Y(_041_)
  );
  \$_XOR_  _221_ (
    .A(_041_),
    .B(reg_tmp_c[7]),
    .Y(_112_[7])
  );
  \$_NAND_  _222_ (
    .A(reg_tmp_c[7]),
    .B(reg_tmp_c[6]),
    .Y(_042_)
  );
  \$_OR_  _223_ (
    .A(_042_),
    .B(_037_),
    .Y(_043_)
  );
  \$_OR_  _224_ (
    .A(_042_),
    .B(_038_),
    .Y(_044_)
  );
  \$_ANDNOT_  _225_ (
    .A(_003_),
    .B(_044_),
    .Y(_045_)
  );
  \$_ANDNOT_  _226_ (
    .A(_043_),
    .B(_045_),
    .Y(_046_)
  );
  \$_XNOR_  _227_ (
    .A(_046_),
    .B(reg_tmp_c[8]),
    .Y(_112_[8])
  );
  \$_ANDNOT_  _228_ (
    .A(reg_tmp_c[8]),
    .B(_046_),
    .Y(_047_)
  );
  \$_XOR_  _229_ (
    .A(_047_),
    .B(reg_tmp_c[9]),
    .Y(_112_[9])
  );
  \$_NAND_  _230_ (
    .A(reg_tmp_c[9]),
    .B(reg_tmp_c[8]),
    .Y(_048_)
  );
  \$_OR_  _231_ (
    .A(_048_),
    .B(_046_),
    .Y(_049_)
  );
  \$_XNOR_  _232_ (
    .A(_049_),
    .B(reg_tmp_c[10]),
    .Y(_112_[10])
  );
  \$_ANDNOT_  _233_ (
    .A(reg_tmp_c[10]),
    .B(_049_),
    .Y(_050_)
  );
  \$_XOR_  _234_ (
    .A(_050_),
    .B(reg_tmp_c[11]),
    .Y(_112_[11])
  );
  \$_XOR_  _235_ (
    .A(_055_),
    .B(reg_tmp_c[0]),
    .Y(_111_[0])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[0]  /* _236_ */ (
    .C(clk),
    .D(_111_[0]),
    .E(hold),
    .Q(reg_tmp_c[0])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[1]  /* _237_ */ (
    .C(clk),
    .D(_112_[1]),
    .E(hold),
    .Q(reg_tmp_c[1])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[2]  /* _238_ */ (
    .C(clk),
    .D(_112_[2]),
    .E(hold),
    .Q(reg_tmp_c[2])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[3]  /* _239_ */ (
    .C(clk),
    .D(_112_[3]),
    .E(hold),
    .Q(reg_tmp_c[3])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[4]  /* _240_ */ (
    .C(clk),
    .D(_112_[4]),
    .E(hold),
    .Q(reg_tmp_c[4])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[5]  /* _241_ */ (
    .C(clk),
    .D(_112_[5]),
    .E(hold),
    .Q(reg_tmp_c[5])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[6]  /* _242_ */ (
    .C(clk),
    .D(_112_[6]),
    .E(hold),
    .Q(reg_tmp_c[6])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[7]  /* _243_ */ (
    .C(clk),
    .D(_112_[7]),
    .E(hold),
    .Q(reg_tmp_c[7])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[8]  /* _244_ */ (
    .C(clk),
    .D(_112_[8]),
    .E(hold),
    .Q(reg_tmp_c[8])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[9]  /* _245_ */ (
    .C(clk),
    .D(_112_[9]),
    .E(hold),
    .Q(reg_tmp_c[9])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[10]  /* _246_ */ (
    .C(clk),
    .D(_112_[10]),
    .E(hold),
    .Q(reg_tmp_c[10])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_tmp_c_reg[11]  /* _247_ */ (
    .C(clk),
    .D(_112_[11]),
    .E(hold),
    .Q(reg_tmp_c[11])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[0]  /* _248_ */ (
    .C(clk),
    .D(b[0]),
    .E(hold),
    .Q(reg_b[0])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[1]  /* _249_ */ (
    .C(clk),
    .D(b[1]),
    .E(hold),
    .Q(reg_b[1])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[2]  /* _250_ */ (
    .C(clk),
    .D(b[2]),
    .E(hold),
    .Q(reg_b[2])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[3]  /* _251_ */ (
    .C(clk),
    .D(b[3]),
    .E(hold),
    .Q(reg_b[3])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[4]  /* _252_ */ (
    .C(clk),
    .D(b[4]),
    .E(hold),
    .Q(reg_b[4])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_b_reg[5]  /* _253_ */ (
    .C(clk),
    .D(b[5]),
    .E(hold),
    .Q(reg_b[5])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[0]  /* _254_ */ (
    .C(clk),
    .D(a[0]),
    .E(hold),
    .Q(reg_a[0])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[1]  /* _255_ */ (
    .C(clk),
    .D(a[1]),
    .E(hold),
    .Q(reg_a[1])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[2]  /* _256_ */ (
    .C(clk),
    .D(a[2]),
    .E(hold),
    .Q(reg_a[2])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[3]  /* _257_ */ (
    .C(clk),
    .D(a[3]),
    .E(hold),
    .Q(reg_a[3])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[4]  /* _258_ */ (
    .C(clk),
    .D(a[4]),
    .E(hold),
    .Q(reg_a[4])
  );
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:39.1-46.4" *)
  \$_DFFE_PN_  \reg_a_reg[5]  /* _259_ */ (
    .C(clk),
    .D(a[5]),
    .E(hold),
    .Q(reg_a[5])
  );
  assign _111_[11:6] = reg_tmp_c[11:6];
  assign _112_[0] = _111_[0];
  assign c = reg_tmp_c;
endmodule

/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* top =  1  *)
(* src = "dut.sv:1.1-5.10" *)
module partsel_simple(idx, data, slice_up, slice_down);
  (* src = "dut.sv:1.35-1.38" *)
  input [2:0] idx;
  wire [2:0] idx;
  (* src = "dut.sv:1.53-1.57" *)
  input [31:0] data;
  wire [31:0] data;
  (* src = "dut.sv:1.72-1.80" *)
  output [3:0] slice_up;
  wire [3:0] slice_up;
  (* src = "dut.sv:1.82-1.92" *)
  output [3:0] slice_down;
  wire [3:0] slice_down;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire [4:0] offset;
  \$_MUX_  _24_ (
    .A(data[0]),
    .B(data[4]),
    .S(idx[0]),
    .Y(_00_)
  );
  \$_MUX_  _25_ (
    .A(data[8]),
    .B(data[12]),
    .S(idx[0]),
    .Y(_01_)
  );
  \$_MUX_  _26_ (
    .A(_00_),
    .B(_01_),
    .S(idx[1]),
    .Y(_02_)
  );
  \$_MUX_  _27_ (
    .A(data[16]),
    .B(data[20]),
    .S(idx[0]),
    .Y(_03_)
  );
  \$_MUX_  _28_ (
    .A(data[24]),
    .B(data[28]),
    .S(idx[0]),
    .Y(_04_)
  );
  \$_MUX_  _29_ (
    .A(_03_),
    .B(_04_),
    .S(idx[1]),
    .Y(_05_)
  );
  \$_MUX_  _30_ (
    .A(_02_),
    .B(_05_),
    .S(idx[2]),
    .Y(slice_down[0])
  );
  \$_MUX_  _31_ (
    .A(data[1]),
    .B(data[5]),
    .S(idx[0]),
    .Y(_06_)
  );
  \$_MUX_  _32_ (
    .A(data[9]),
    .B(data[13]),
    .S(idx[0]),
    .Y(_07_)
  );
  \$_MUX_  _33_ (
    .A(_06_),
    .B(_07_),
    .S(idx[1]),
    .Y(_08_)
  );
  \$_MUX_  _34_ (
    .A(data[17]),
    .B(data[21]),
    .S(idx[0]),
    .Y(_09_)
  );
  \$_MUX_  _35_ (
    .A(data[25]),
    .B(data[29]),
    .S(idx[0]),
    .Y(_10_)
  );
  \$_MUX_  _36_ (
    .A(_09_),
    .B(_10_),
    .S(idx[1]),
    .Y(_11_)
  );
  \$_MUX_  _37_ (
    .A(_08_),
    .B(_11_),
    .S(idx[2]),
    .Y(slice_down[1])
  );
  \$_MUX_  _38_ (
    .A(data[2]),
    .B(data[6]),
    .S(idx[0]),
    .Y(_12_)
  );
  \$_MUX_  _39_ (
    .A(data[10]),
    .B(data[14]),
    .S(idx[0]),
    .Y(_13_)
  );
  \$_MUX_  _40_ (
    .A(_12_),
    .B(_13_),
    .S(idx[1]),
    .Y(_14_)
  );
  \$_MUX_  _41_ (
    .A(data[18]),
    .B(data[22]),
    .S(idx[0]),
    .Y(_15_)
  );
  \$_MUX_  _42_ (
    .A(data[26]),
    .B(data[30]),
    .S(idx[0]),
    .Y(_16_)
  );
  \$_MUX_  _43_ (
    .A(_15_),
    .B(_16_),
    .S(idx[1]),
    .Y(_17_)
  );
  \$_MUX_  _44_ (
    .A(_14_),
    .B(_17_),
    .S(idx[2]),
    .Y(slice_down[2])
  );
  \$_MUX_  _45_ (
    .A(data[3]),
    .B(data[7]),
    .S(idx[0]),
    .Y(_18_)
  );
  \$_MUX_  _46_ (
    .A(data[11]),
    .B(data[15]),
    .S(idx[0]),
    .Y(_19_)
  );
  \$_MUX_  _47_ (
    .A(_18_),
    .B(_19_),
    .S(idx[1]),
    .Y(_20_)
  );
  \$_MUX_  _48_ (
    .A(data[19]),
    .B(data[23]),
    .S(idx[0]),
    .Y(_21_)
  );
  \$_MUX_  _49_ (
    .A(data[27]),
    .B(data[31]),
    .S(idx[0]),
    .Y(_22_)
  );
  \$_MUX_  _50_ (
    .A(_21_),
    .B(_22_),
    .S(idx[1]),
    .Y(_23_)
  );
  \$_MUX_  _51_ (
    .A(_20_),
    .B(_23_),
    .S(idx[2]),
    .Y(slice_down[3])
  );
  assign offset = { idx, 2'h0 };
  assign slice_up = slice_down;
endmodule

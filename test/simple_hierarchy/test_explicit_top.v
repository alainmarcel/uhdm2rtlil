/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* dynports =  1  *)
(* src = "dut.sv:25.5-30.7" *)
(* hdlname = "submodule" *)
module \$paramod\submodule\WIDTH=s32'00000000000000000000000000001000 (a, b, c, out);
  (* src = "dut.sv:4.29-4.30" *)
  input [7:0] a;
  wire [7:0] a;
  (* src = "dut.sv:5.29-5.30" *)
  input [7:0] b;
  wire [7:0] b;
  (* src = "dut.sv:6.29-6.30" *)
  input [7:0] c;
  wire [7:0] c;
  (* src = "dut.sv:7.29-7.32" *)
  output [7:0] out;
  wire [7:0] out;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  assign _00_ = ~(b[0] & a[0]);
  assign out[0] = c[0] & ~(_00_);
  assign _01_ = ~(b[1] & a[1]);
  assign out[1] = c[1] & ~(_01_);
  assign _02_ = ~(b[2] & a[2]);
  assign out[2] = c[2] & ~(_02_);
  assign _03_ = ~(b[3] & a[3]);
  assign out[3] = c[3] & ~(_03_);
  assign _04_ = ~(b[4] & a[4]);
  assign out[4] = c[4] & ~(_04_);
  assign _05_ = ~(b[5] & a[5]);
  assign out[5] = c[5] & ~(_05_);
  assign _06_ = ~(b[6] & a[6]);
  assign out[6] = c[6] & ~(_06_);
  assign _07_ = ~(b[7] & a[7]);
  assign out[7] = c[7] & ~(_07_);
endmodule

(* dynports =  1  *)
(* src = "dut.sv:41.5-46.7" *)
(* hdlname = "submodule" *)
module \$paramod\submodule\WIDTH=s32'00000000000000000000000000010000 (a, b, c, out);
  (* src = "dut.sv:4.29-4.30" *)
  input [15:0] a;
  wire [15:0] a;
  (* src = "dut.sv:5.29-5.30" *)
  input [15:0] b;
  wire [15:0] b;
  (* src = "dut.sv:6.29-6.30" *)
  input [15:0] c;
  wire [15:0] c;
  (* src = "dut.sv:7.29-7.32" *)
  output [15:0] out;
  wire [15:0] out;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  assign _00_ = ~(b[0] & a[0]);
  assign out[0] = c[0] & ~(_00_);
  assign _01_ = ~(b[1] & a[1]);
  assign out[1] = c[1] & ~(_01_);
  assign _02_ = ~(b[2] & a[2]);
  assign out[2] = c[2] & ~(_02_);
  assign _03_ = ~(b[3] & a[3]);
  assign out[3] = c[3] & ~(_03_);
  assign _04_ = ~(b[4] & a[4]);
  assign out[4] = c[4] & ~(_04_);
  assign _05_ = ~(b[5] & a[5]);
  assign out[5] = c[5] & ~(_05_);
  assign _06_ = ~(b[6] & a[6]);
  assign out[6] = c[6] & ~(_06_);
  assign _07_ = ~(b[7] & a[7]);
  assign out[7] = c[7] & ~(_07_);
  assign _08_ = ~(b[8] & a[8]);
  assign out[8] = c[8] & ~(_08_);
  assign _09_ = ~(b[9] & a[9]);
  assign out[9] = c[9] & ~(_09_);
  assign _10_ = ~(b[10] & a[10]);
  assign out[10] = c[10] & ~(_10_);
  assign _11_ = ~(b[11] & a[11]);
  assign out[11] = c[11] & ~(_11_);
  assign _12_ = ~(b[12] & a[12]);
  assign out[12] = c[12] & ~(_12_);
  assign _13_ = ~(b[13] & a[13]);
  assign out[13] = c[13] & ~(_13_);
  assign _14_ = ~(b[14] & a[14]);
  assign out[14] = c[14] & ~(_14_);
  assign _15_ = ~(b[15] & a[15]);
  assign out[15] = c[15] & ~(_15_);
endmodule

#!/bin/bash

# Generic test script for UHDM workflow comparison: UHDM vs Verilog frontends
# This script demonstrates the complete flow and compares UHDM vs Verilog import
# Usage: test_uhdm_workflow.sh <test_directory>

set -e  # Exit on any error

# Check if test directory argument is provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 <test_directory>"
    echo "Example: $0 flipflop"
    exit 1
fi

TEST_DIR="$1"

# Check if test directory exists
if [ ! -d "$TEST_DIR" ]; then
    echo "ERROR: Test directory '$TEST_DIR' does not exist"
    exit 1
fi

# Change to test directory
cd "$TEST_DIR"

# Extract module name from directory name (for hierarchy command)
# Remove any trailing slash and extract just the basename
MODULE_NAME=$(basename "$TEST_DIR" | sed 's|/$||')

echo "=== UHDM vs Verilog Workflow Comparison ==="
echo "Testing: SystemVerilog -> [UHDM path vs Verilog path] -> Yosys -> RTLIL comparison"
echo "Test Directory: $TEST_DIR"
echo "Module Name: $MODULE_NAME"
echo

# Set up paths (relative to test directory)
SURELOG_BIN="../../build/third_party/Surelog/bin/surelog"
YOSYS_BIN="../../out/current/bin/yosys"
SV_FILE="dut.sv"
UHDM_FILE="slpp_all/surelog.uhdm"

# Check if binaries exist
if [ ! -f "$SURELOG_BIN" ]; then
    echo "ERROR: Surelog not found at $SURELOG_BIN"
    exit 1
fi

if [ ! -f "$YOSYS_BIN" ]; then
    echo "ERROR: Yosys not found at $YOSYS_BIN"
    exit 1
fi

if [ ! -f "$SV_FILE" ]; then
    echo "ERROR: SystemVerilog file $SV_FILE not found in $TEST_DIR"
    exit 1
fi

# Clean up previous runs
echo "1. Cleaning up previous files..."
rm -f "$UHDM_FILE" *.log *.dot *_from_uhdm.il *_from_verilog.il rtlil_diff.txt test_*_read.ys

# Step 1: Use Surelog to parse SystemVerilog and generate UHDM
echo "2. Running Surelog to generate UHDM..."
echo "   Command: $SURELOG_BIN -parse $SV_FILE"
$SURELOG_BIN -parse "$SV_FILE"

# Check if UHDM file was generated
if [ ! -f "$UHDM_FILE" ]; then
    echo "ERROR: UHDM file $UHDM_FILE was not generated by Surelog"
    exit 1
fi

echo "   ✓ UHDM file generated successfully: $UHDM_FILE"
echo "   File size: $(ls -lh $UHDM_FILE | awk '{print $5}')"
echo

# Step 2: Create Yosys script to read UHDM file
echo "3. Creating Yosys script to read UHDM..."
cat > test_uhdm_read.ys << EOF
# Test script to read UHDM file in Yosys
plugin -i ../../build/uhdm2rtlil.so
read_uhdm slpp_all/surelog.uhdm
hierarchy -check -top $MODULE_NAME
stat
opt
stat
write_rtlil ${MODULE_NAME}_from_uhdm.il
EOF

echo "   ✓ Yosys script created: test_uhdm_read.ys"
echo

# Step 3: Create Yosys script to read Verilog file
echo "4. Creating Yosys script to read Verilog..."
cat > test_verilog_read.ys << EOF
# Test script to read Verilog file directly in Yosys
read_verilog -sv dut.sv
hierarchy -check -top $MODULE_NAME
stat
opt
stat
write_rtlil ${MODULE_NAME}_from_verilog.il
EOF

echo "   ✓ Yosys script created: test_verilog_read.ys"
echo

# Step 4: Run Yosys with UHDM input
echo "5. Running Yosys with UHDM input..."
echo "   Command: $YOSYS_BIN test_uhdm_read.ys"
if $YOSYS_BIN test_uhdm_read.ys; then
    echo "   ✓ Yosys successfully processed UHDM file"
else
    echo "   ✗ Yosys failed to process UHDM file"
    exit 1
fi

echo

# Step 5: Run Yosys with Verilog input
echo "6. Running Yosys with direct Verilog input..."
echo "   Command: $YOSYS_BIN test_verilog_read.ys"
if $YOSYS_BIN test_verilog_read.ys; then
    echo "   ✓ Yosys successfully processed Verilog file"
else
    echo "   ✗ Yosys failed to process Verilog file"
    exit 1
fi

echo

# Step 6: Compare the results
echo "7. Comparing UHDM vs Verilog RTLIL outputs..."
UHDM_RTLIL="${MODULE_NAME}_from_uhdm.il"
VERILOG_RTLIL="${MODULE_NAME}_from_verilog.il"

if [ -f "$UHDM_RTLIL" ] && [ -f "$VERILOG_RTLIL" ]; then
    echo "   Both files generated successfully"
    echo
    echo "   UHDM RTLIL ($UHDM_RTLIL):"
    echo "   ====================================="
    cat "$UHDM_RTLIL"
    echo
    echo "   Verilog RTLIL ($VERILOG_RTLIL):"
    echo "   =========================================="
    cat "$VERILOG_RTLIL"
    echo
    
    # Compare files
    if diff -u "$UHDM_RTLIL" "$VERILOG_RTLIL" > rtlil_diff.txt; then
        echo "   ✓ RTLIL outputs are IDENTICAL!"
        echo "     UHDM frontend produces the same result as Verilog frontend"
        rm rtlil_diff.txt
        RESULT=0
    else
        echo "   ⚠ RTLIL outputs are DIFFERENT:"
        echo "     Differences saved to rtlil_diff.txt"
        echo
        echo "   Diff summary:"
        head -20 rtlil_diff.txt
        if [ $(wc -l < rtlil_diff.txt) -gt 20 ]; then
            echo "   ... (truncated, see rtlil_diff.txt for full diff)"
        fi
        RESULT=1
    fi
else
    echo "   ✗ One or both RTLIL files missing"
    ls -la *.il 2>/dev/null || echo "   No .il files found"
    RESULT=1
fi

echo
echo "=== Test Summary ==="
echo "✓ Surelog successfully parsed SystemVerilog and generated UHDM"
echo "✓ Yosys UHDM frontend successfully read UHDM and generated RTLIL"
echo "✓ Yosys Verilog frontend successfully read SystemVerilog and generated RTLIL"

if [ -f "rtlil_diff.txt" ]; then
    echo "⚠ RTLIL outputs differ - see rtlil_diff.txt for details"
else
    echo "✓ RTLIL outputs are identical - UHDM frontend working correctly!"
fi

echo
echo "Generated files:"
ls -la *.uhdm *.il *.ys *.txt 2>/dev/null || echo "  Files may not have been generated"

# Return to original directory
cd ..

# Exit with appropriate code
exit $RESULT
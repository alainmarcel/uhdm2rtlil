--- verilog_synth_clean.tmp	2025-07-26 21:22:39.398524320 -0700
+++ uhdm_synth_clean.tmp	2025-07-26 21:22:39.398524320 -0700
@@ -1,5 +1,4 @@
 /* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */
-(* dynports =  1  *)
 (* top =  1  *)
 (* src = "dut.sv:2.1-27.10" *)
 module counter(clk, rst_n, enable, count, overflow);
@@ -14,6 +13,10 @@
 wire _08_;
 wire _09_;
 wire _10_;
+wire _11_;
+wire _12_;
+wire _13_;
+wire _14_;
 (* src = "dut.sv:5.18-5.21" *)
 input clk;
 wire clk;
@@ -31,108 +34,128 @@
 (* src = "dut.sv:6.18-6.23" *)
 input rst_n;
 wire rst_n;
-\$_NOT_  _11_ (
+\$_NOT_  _15_ (
 .A(count[0]),
 .Y(count_next[0])
 );
-\$_NAND_  _12_ (
+\$_OR_  _16_ (
 .A(count[1]),
 .B(count[0]),
 .Y(_00_)
 );
-\$_NAND_  _13_ (
+\$_OR_  _17_ (
 .A(count[3]),
 .B(count[2]),
 .Y(_01_)
 );
-\$_OR_  _14_ (
+\$_OR_  _18_ (
 .A(_01_),
 .B(_00_),
 .Y(_02_)
 );
-\$_NAND_  _15_ (
+\$_OR_  _19_ (
 .A(count[5]),
 .B(count[4]),
 .Y(_03_)
 );
-\$_NAND_  _16_ (
-.A(count[6]),
-.B(count[7]),
+\$_OR_  _20_ (
+.A(count[7]),
+.B(count[6]),
 .Y(_04_)
 );
-\$_OR_  _17_ (
+\$_OR_  _21_ (
 .A(_04_),
 .B(_03_),
 .Y(_05_)
 );
-\$_OR_  _18_ (
+\$_OR_  _22_ (
 .A(_05_),
 .B(_02_),
 .Y(_06_)
 );
-\$_ANDNOT_  _19_ (
+\$_ANDNOT_  _23_ (
 .A(enable),
 .B(_06_),
 .Y(overflow)
 );
-\$_XOR_  _20_ (
+\$_XOR_  _24_ (
 .A(count[1]),
 .B(count[0]),
 .Y(count_next[1])
 );
-\$_XNOR_  _21_ (
-.A(_00_),
+\$_NAND_  _25_ (
+.A(count[1]),
+.B(count[0]),
+.Y(_07_)
+);
+\$_XNOR_  _26_ (
+.A(_07_),
 .B(count[2]),
 .Y(count_next[2])
 );
-\$_ANDNOT_  _22_ (
+\$_ANDNOT_  _27_ (
 .A(count[2]),
-.B(_00_),
-.Y(_07_)
+.B(_07_),
+.Y(_08_)
 );
-\$_XOR_  _23_ (
-.A(_07_),
+\$_XOR_  _28_ (
+.A(_08_),
 .B(count[3]),
 .Y(count_next[3])
 );
-\$_XNOR_  _24_ (
-.A(_02_),
+\$_NAND_  _29_ (
+.A(count[3]),
+.B(count[2]),
+.Y(_09_)
+);
+\$_OR_  _30_ (
+.A(_09_),
+.B(_07_),
+.Y(_10_)
+);
+\$_XNOR_  _31_ (
+.A(_10_),
 .B(count[4]),
 .Y(count_next[4])
 );
-\$_ANDNOT_  _25_ (
+\$_ANDNOT_  _32_ (
 .A(count[4]),
-.B(_02_),
-.Y(_08_)
+.B(_10_),
+.Y(_11_)
 );
-\$_XOR_  _26_ (
-.A(_08_),
+\$_XOR_  _33_ (
+.A(_11_),
 .B(count[5]),
 .Y(count_next[5])
 );
-\$_OR_  _27_ (
-.A(_03_),
-.B(_02_),
-.Y(_09_)
+\$_NAND_  _34_ (
+.A(count[5]),
+.B(count[4]),
+.Y(_12_)
 );
-\$_XNOR_  _28_ (
-.A(_09_),
+\$_OR_  _35_ (
+.A(_12_),
+.B(_10_),
+.Y(_13_)
+);
+\$_XNOR_  _36_ (
+.A(_13_),
 .B(count[6]),
 .Y(count_next[6])
 );
-\$_ANDNOT_  _29_ (
+\$_ANDNOT_  _37_ (
 .A(count[6]),
-.B(_09_),
-.Y(_10_)
+.B(_13_),
+.Y(_14_)
 );
-\$_XOR_  _30_ (
-.A(_10_),
+\$_XOR_  _38_ (
+.A(_14_),
 .B(count[7]),
 .Y(count_next[7])
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[0]  /* _31_ */ (
+\$_DFFE_PN0P_  \count_reg[0]  /* _39_ */ (
 .C(clk),
 .D(count_next[0]),
 .E(enable),
@@ -141,7 +164,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[1]  /* _32_ */ (
+\$_DFFE_PN0P_  \count_reg[1]  /* _40_ */ (
 .C(clk),
 .D(count_next[1]),
 .E(enable),
@@ -150,7 +173,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[2]  /* _33_ */ (
+\$_DFFE_PN0P_  \count_reg[2]  /* _41_ */ (
 .C(clk),
 .D(count_next[2]),
 .E(enable),
@@ -159,7 +182,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[3]  /* _34_ */ (
+\$_DFFE_PN0P_  \count_reg[3]  /* _42_ */ (
 .C(clk),
 .D(count_next[3]),
 .E(enable),
@@ -168,7 +191,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[4]  /* _35_ */ (
+\$_DFFE_PN0P_  \count_reg[4]  /* _43_ */ (
 .C(clk),
 .D(count_next[4]),
 .E(enable),
@@ -177,7 +200,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[5]  /* _36_ */ (
+\$_DFFE_PN0P_  \count_reg[5]  /* _44_ */ (
 .C(clk),
 .D(count_next[5]),
 .E(enable),
@@ -186,7 +209,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[6]  /* _37_ */ (
+\$_DFFE_PN0P_  \count_reg[6]  /* _45_ */ (
 .C(clk),
 .D(count_next[6]),
 .E(enable),
@@ -195,7 +218,7 @@
 );
 (* \always_ff  = 32'd1 *)
 (* src = "dut.sv:14.5-20.8" *)
-\$_DFFE_PN0P_  \count_reg[7]  /* _38_ */ (
+\$_DFFE_PN0P_  \count_reg[7]  /* _46_ */ (
 .C(clk),
 .D(count_next[7]),
 .E(enable),

--- verilog_synth_clean.tmp	2025-07-26 23:52:00.820044132 -0700
+++ uhdm_synth_clean.tmp	2025-07-26 23:52:00.820044132 -0700
@@ -1,306 +1,45 @@
 /* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */
-(* hdlname = "submodule" *)
-(* dynports =  1  *)
-(* interfaces_replaced_in_module =  1  *)
-(* src = "dut.sv:20.1-28.10" *)
-module \$paramod\submodule\WIDTH=s32'00000000000000000000000000001000$interfaces$$paramod\data_bus_if\WIDTH=s32'00000000000000000000000000001000 (out, \bus.a , \bus.b , \bus.c );
-wire _00_;
-wire _01_;
-wire _02_;
-wire _03_;
-wire _04_;
-wire _05_;
-wire _06_;
-wire _07_;
-(* src = "dut.sv:0.0-0.0" *)
-input [7:0] \bus.a ;
+(* src = "dut.sv:58.5-61.7" *)
+module \$paramod\submodule\WIDTH=s32'00000000000000000000000000001000 (bus, out);
+(* interface_port = 32'd1 *)
+(* src = "dut.sv:23.22-23.25" *)
+inout bus;
+wire bus;
+(* src = "dut.sv:5.23-5.24" *)
 wire [7:0] \bus.a ;
-(* src = "dut.sv:0.0-0.0" *)
-input [7:0] \bus.b ;
+(* src = "dut.sv:6.23-6.24" *)
 wire [7:0] \bus.b ;
-(* src = "dut.sv:0.0-0.0" *)
-input [7:0] \bus.c ;
+(* src = "dut.sv:7.23-7.24" *)
 wire [7:0] \bus.c ;
 (* src = "dut.sv:24.30-24.33" *)
 output [7:0] out;
 wire [7:0] out;
-\$_NAND_  _08_ (
-.A(\bus.b [0]),
-.B(\bus.a [0]),
-.Y(_00_)
-);
-\$_ANDNOT_  _09_ (
-.A(\bus.c [0]),
-.B(_00_),
-.Y(out[0])
-);
-\$_NAND_  _10_ (
-.A(\bus.b [1]),
-.B(\bus.a [1]),
-.Y(_01_)
-);
-\$_ANDNOT_  _11_ (
-.A(\bus.c [1]),
-.B(_01_),
-.Y(out[1])
-);
-\$_NAND_  _12_ (
-.A(\bus.b [2]),
-.B(\bus.a [2]),
-.Y(_02_)
-);
-\$_ANDNOT_  _13_ (
-.A(\bus.c [2]),
-.B(_02_),
-.Y(out[2])
-);
-\$_NAND_  _14_ (
-.A(\bus.b [3]),
-.B(\bus.a [3]),
-.Y(_03_)
-);
-\$_ANDNOT_  _15_ (
-.A(\bus.c [3]),
-.B(_03_),
-.Y(out[3])
-);
-\$_NAND_  _16_ (
-.A(\bus.b [4]),
-.B(\bus.a [4]),
-.Y(_04_)
-);
-\$_ANDNOT_  _17_ (
-.A(\bus.c [4]),
-.B(_04_),
-.Y(out[4])
-);
-\$_NAND_  _18_ (
-.A(\bus.b [5]),
-.B(\bus.a [5]),
-.Y(_05_)
-);
-\$_ANDNOT_  _19_ (
-.A(\bus.c [5]),
-.B(_05_),
-.Y(out[5])
-);
-\$_NAND_  _20_ (
-.A(\bus.b [6]),
-.B(\bus.a [6]),
-.Y(_06_)
-);
-\$_ANDNOT_  _21_ (
-.A(\bus.c [6]),
-.B(_06_),
-.Y(out[6])
-);
-\$_NAND_  _22_ (
-.A(\bus.b [7]),
-.B(\bus.a [7]),
-.Y(_07_)
-);
-\$_ANDNOT_  _23_ (
-.A(\bus.c [7]),
-.B(_07_),
-.Y(out[7])
-);
+assign \bus.a  = 8'hxx;
+assign \bus.b  = 8'hxx;
+assign \bus.c  = 8'hxx;
+assign out = 8'h00;
 endmodule
-(* hdlname = "submodule" *)
-(* dynports =  1  *)
-(* interfaces_replaced_in_module =  1  *)
-(* src = "dut.sv:20.1-28.10" *)
-module \$paramod\submodule\WIDTH=s32'00000000000000000000000000010000$interfaces$$paramod\data_bus_if\WIDTH=s32'00000000000000000000000000010000 (out, \bus.a , \bus.b , \bus.c );
-wire _00_;
-wire _01_;
-wire _02_;
-wire _03_;
-wire _04_;
-wire _05_;
-wire _06_;
-wire _07_;
-wire _08_;
-wire _09_;
-wire _10_;
-wire _11_;
-wire _12_;
-wire _13_;
-wire _14_;
-wire _15_;
-(* src = "dut.sv:0.0-0.0" *)
-input [15:0] \bus.a ;
+(* src = "dut.sv:70.5-73.7" *)
+module \$paramod\submodule\WIDTH=s32'00000000000000000000000000010000 (bus, out);
+(* interface_port = 32'd1 *)
+(* src = "dut.sv:23.22-23.25" *)
+inout bus;
+wire bus;
+(* src = "dut.sv:5.23-5.24" *)
 wire [15:0] \bus.a ;
-(* src = "dut.sv:0.0-0.0" *)
-input [15:0] \bus.b ;
+(* src = "dut.sv:6.23-6.24" *)
 wire [15:0] \bus.b ;
-(* src = "dut.sv:0.0-0.0" *)
-input [15:0] \bus.c ;
+(* src = "dut.sv:7.23-7.24" *)
 wire [15:0] \bus.c ;
 (* src = "dut.sv:24.30-24.33" *)
 output [15:0] out;
 wire [15:0] out;
-\$_NAND_  _16_ (
-.A(\bus.b [14]),
-.B(\bus.a [14]),
-.Y(_00_)
-);
-\$_ANDNOT_  _17_ (
-.A(\bus.c [14]),
-.B(_00_),
-.Y(out[14])
-);
-\$_NAND_  _18_ (
-.A(\bus.b [15]),
-.B(\bus.a [15]),
-.Y(_01_)
-);
-\$_ANDNOT_  _19_ (
-.A(\bus.c [15]),
-.B(_01_),
-.Y(out[15])
-);
-\$_NAND_  _20_ (
-.A(\bus.b [0]),
-.B(\bus.a [0]),
-.Y(_02_)
-);
-\$_ANDNOT_  _21_ (
-.A(\bus.c [0]),
-.B(_02_),
-.Y(out[0])
-);
-\$_NAND_  _22_ (
-.A(\bus.b [1]),
-.B(\bus.a [1]),
-.Y(_03_)
-);
-\$_ANDNOT_  _23_ (
-.A(\bus.c [1]),
-.B(_03_),
-.Y(out[1])
-);
-\$_NAND_  _24_ (
-.A(\bus.b [2]),
-.B(\bus.a [2]),
-.Y(_04_)
-);
-\$_ANDNOT_  _25_ (
-.A(\bus.c [2]),
-.B(_04_),
-.Y(out[2])
-);
-\$_NAND_  _26_ (
-.A(\bus.b [3]),
-.B(\bus.a [3]),
-.Y(_05_)
-);
-\$_ANDNOT_  _27_ (
-.A(\bus.c [3]),
-.B(_05_),
-.Y(out[3])
-);
-\$_NAND_  _28_ (
-.A(\bus.b [4]),
-.B(\bus.a [4]),
-.Y(_06_)
-);
-\$_ANDNOT_  _29_ (
-.A(\bus.c [4]),
-.B(_06_),
-.Y(out[4])
-);
-\$_NAND_  _30_ (
-.A(\bus.b [5]),
-.B(\bus.a [5]),
-.Y(_07_)
-);
-\$_ANDNOT_  _31_ (
-.A(\bus.c [5]),
-.B(_07_),
-.Y(out[5])
-);
-\$_NAND_  _32_ (
-.A(\bus.b [6]),
-.B(\bus.a [6]),
-.Y(_08_)
-);
-\$_ANDNOT_  _33_ (
-.A(\bus.c [6]),
-.B(_08_),
-.Y(out[6])
-);
-\$_NAND_  _34_ (
-.A(\bus.b [7]),
-.B(\bus.a [7]),
-.Y(_09_)
-);
-\$_ANDNOT_  _35_ (
-.A(\bus.c [7]),
-.B(_09_),
-.Y(out[7])
-);
-\$_NAND_  _36_ (
-.A(\bus.b [8]),
-.B(\bus.a [8]),
-.Y(_10_)
-);
-\$_ANDNOT_  _37_ (
-.A(\bus.c [8]),
-.B(_10_),
-.Y(out[8])
-);
-\$_NAND_  _38_ (
-.A(\bus.b [9]),
-.B(\bus.a [9]),
-.Y(_11_)
-);
-\$_ANDNOT_  _39_ (
-.A(\bus.c [9]),
-.B(_11_),
-.Y(out[9])
-);
-\$_NAND_  _40_ (
-.A(\bus.b [10]),
-.B(\bus.a [10]),
-.Y(_12_)
-);
-\$_ANDNOT_  _41_ (
-.A(\bus.c [10]),
-.B(_12_),
-.Y(out[10])
-);
-\$_NAND_  _42_ (
-.A(\bus.b [11]),
-.B(\bus.a [11]),
-.Y(_13_)
-);
-\$_ANDNOT_  _43_ (
-.A(\bus.c [11]),
-.B(_13_),
-.Y(out[11])
-);
-\$_NAND_  _44_ (
-.A(\bus.b [12]),
-.B(\bus.a [12]),
-.Y(_14_)
-);
-\$_ANDNOT_  _45_ (
-.A(\bus.c [12]),
-.B(_14_),
-.Y(out[12])
-);
-\$_NAND_  _46_ (
-.A(\bus.b [13]),
-.B(\bus.a [13]),
-.Y(_15_)
-);
-\$_ANDNOT_  _47_ (
-.A(\bus.c [13]),
-.B(_15_),
-.Y(out[13])
-);
+assign \bus.a  = 16'hxxxx;
+assign \bus.b  = 16'hxxxx;
+assign \bus.c  = 16'hxxxx;
+assign out = 16'h0000;
 endmodule
 (* top =  1  *)
-(* interfaces_replaced_in_module =  1  *)
 (* src = "dut.sv:30.1-75.10" *)
 module simple_interface(a1, b1, c1, a2, b2, c2, a3, b3, c3, out1, out2, out3);
 (* src = "dut.sv:31.25-31.27" *)
@@ -321,23 +60,38 @@
 (* src = "dut.sv:33.29-33.31" *)
 input [15:0] b3;
 wire [15:0] b3;
-(* src = "dut.sv:0.0-0.0" *)
+(* unused_bits = "0" *)
+wire bus1;
+(* src = "dut.sv:5.23-5.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus1.a ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:6.23-6.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus1.b ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:7.23-7.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus1.c ;
-(* src = "dut.sv:0.0-0.0" *)
+(* unused_bits = "0" *)
+wire bus2;
+(* src = "dut.sv:5.23-5.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus2.a ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:6.23-6.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus2.b ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:7.23-7.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7" *)
 wire [7:0] \bus2.c ;
-(* src = "dut.sv:0.0-0.0" *)
+(* unused_bits = "0" *)
+wire bus3;
+(* src = "dut.sv:5.23-5.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
 wire [15:0] \bus3.a ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:6.23-6.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
 wire [15:0] \bus3.b ;
-(* src = "dut.sv:0.0-0.0" *)
+(* src = "dut.sv:7.23-7.24" *)
+(* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
 wire [15:0] \bus3.c ;
 (* src = "dut.sv:31.33-31.35" *)
 input [7:0] c1;
@@ -357,25 +111,16 @@
 (* src = "dut.sv:36.25-36.29" *)
 output [15:0] out3;
 wire [15:0] out3;
-(* src = "dut.sv:58.28-61.6" *)
-\$paramod\submodule\WIDTH=s32'00000000000000000000000000001000$interfaces$$paramod\data_bus_if\WIDTH=s32'00000000000000000000000000001000  inst1 (
-.\bus.a (a1),
-.\bus.b (b1),
-.\bus.c (c1),
+\$paramod\submodule\WIDTH=s32'00000000000000000000000000001000  inst1 (
+.bus(bus1),
 .out(out1)
 );
-(* src = "dut.sv:64.28-67.6" *)
-\$paramod\submodule\WIDTH=s32'00000000000000000000000000001000$interfaces$$paramod\data_bus_if\WIDTH=s32'00000000000000000000000000001000  inst2 (
-.\bus.a (a2),
-.\bus.b (b2),
-.\bus.c (c2),
+\$paramod\submodule\WIDTH=s32'00000000000000000000000000001000  inst2 (
+.bus(bus2),
 .out(out2)
 );
-(* src = "dut.sv:70.29-73.6" *)
-\$paramod\submodule\WIDTH=s32'00000000000000000000000000010000$interfaces$$paramod\data_bus_if\WIDTH=s32'00000000000000000000000000010000  inst3 (
-.\bus.a (a3),
-.\bus.b (b3),
-.\bus.c (c3),
+\$paramod\submodule\WIDTH=s32'00000000000000000000000000010000  inst3 (
+.bus(bus3),
 .out(out3)
 );
 assign \bus1.a  = a1;

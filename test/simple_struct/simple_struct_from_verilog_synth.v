/* Generated by Yosys 0.56+171 (git sha1 6fdcdd41d, g++ 11.4.0-1ubuntu1~22.04.2 -Og -fPIC) */

(* top =  1  *)
(* src = "dut.sv:30.1-77.10" *)
module simple_struct(a1, b1, c1, a2, b2, c2, a3, b3, c3, out1, out2, out3);
  (* src = "dut.sv:31.25-31.27" *)
  input [7:0] a1;
  wire [7:0] a1;
  (* src = "dut.sv:31.29-31.31" *)
  input [7:0] b1;
  wire [7:0] b1;
  (* src = "dut.sv:31.33-31.35" *)
  input [7:0] c1;
  wire [7:0] c1;
  (* src = "dut.sv:32.25-32.27" *)
  input [7:0] a2;
  wire [7:0] a2;
  (* src = "dut.sv:32.29-32.31" *)
  input [7:0] b2;
  wire [7:0] b2;
  (* src = "dut.sv:32.33-32.35" *)
  input [7:0] c2;
  wire [7:0] c2;
  (* src = "dut.sv:33.25-33.27" *)
  input [15:0] a3;
  wire [15:0] a3;
  (* src = "dut.sv:33.29-33.31" *)
  input [15:0] b3;
  wire [15:0] b3;
  (* src = "dut.sv:33.33-33.35" *)
  input [15:0] c3;
  wire [15:0] c3;
  (* src = "dut.sv:34.25-34.29" *)
  output [7:0] out1;
  wire [7:0] out1;
  (* src = "dut.sv:35.25-35.29" *)
  output [7:0] out2;
  wire [7:0] out2;
  (* src = "dut.sv:36.25-36.29" *)
  output [15:0] out3;
  wire [15:0] out3;
  (* src = "dut.sv:40.22-40.26" *)
  (* wiretype = "\\data_bus_8bit_t" *)
  wire [23:0] bus1;
  (* src = "dut.sv:41.22-41.26" *)
  (* wiretype = "\\data_bus_8bit_t" *)
  wire [23:0] bus2;
  (* src = "dut.sv:42.22-42.26" *)
  (* wiretype = "\\data_bus_16bit_t" *)
  wire [47:0] bus3;
  (* module_not_derived = 32'd1 *)
  (* src = "dut.sv:60.20-63.6" *)
  submodule_8bit inst1 (
    .bus({ a1, b1, c1 }),
    .out(out1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "dut.sv:66.20-69.6" *)
  submodule_8bit inst2 (
    .bus({ a2, b2, c2 }),
    .out(out2)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "dut.sv:72.21-75.6" *)
  submodule_16bit inst3 (
    .bus({ a3, b3, c3 }),
    .out(out3)
  );
  assign bus1 = { a1, b1, c1 };
  assign bus2 = { a2, b2, c2 };
  assign bus3 = { a3, b3, c3 };
endmodule

(* src = "dut.sv:22.1-28.10" *)
module submodule_16bit(out, bus);
  (* src = "dut.sv:24.25-24.28" *)
  output [15:0] out;
  wire [15:0] out;
  (* src = "dut.sv:23.29-23.32" *)
  (* wiretype = "\\data_bus_16bit_t" *)
  input [47:0] bus;
  wire [47:0] bus;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  \$_NAND_  _16_ (
    .A(bus[16]),
    .B(bus[32]),
    .Y(_00_)
  );
  \$_ANDNOT_  _17_ (
    .A(bus[0]),
    .B(_00_),
    .Y(out[0])
  );
  \$_NAND_  _18_ (
    .A(bus[17]),
    .B(bus[33]),
    .Y(_01_)
  );
  \$_ANDNOT_  _19_ (
    .A(bus[1]),
    .B(_01_),
    .Y(out[1])
  );
  \$_NAND_  _20_ (
    .A(bus[18]),
    .B(bus[34]),
    .Y(_02_)
  );
  \$_ANDNOT_  _21_ (
    .A(bus[2]),
    .B(_02_),
    .Y(out[2])
  );
  \$_NAND_  _22_ (
    .A(bus[19]),
    .B(bus[35]),
    .Y(_03_)
  );
  \$_ANDNOT_  _23_ (
    .A(bus[3]),
    .B(_03_),
    .Y(out[3])
  );
  \$_NAND_  _24_ (
    .A(bus[20]),
    .B(bus[36]),
    .Y(_04_)
  );
  \$_ANDNOT_  _25_ (
    .A(bus[4]),
    .B(_04_),
    .Y(out[4])
  );
  \$_NAND_  _26_ (
    .A(bus[21]),
    .B(bus[37]),
    .Y(_05_)
  );
  \$_ANDNOT_  _27_ (
    .A(bus[5]),
    .B(_05_),
    .Y(out[5])
  );
  \$_NAND_  _28_ (
    .A(bus[22]),
    .B(bus[38]),
    .Y(_06_)
  );
  \$_ANDNOT_  _29_ (
    .A(bus[6]),
    .B(_06_),
    .Y(out[6])
  );
  \$_NAND_  _30_ (
    .A(bus[23]),
    .B(bus[39]),
    .Y(_07_)
  );
  \$_ANDNOT_  _31_ (
    .A(bus[7]),
    .B(_07_),
    .Y(out[7])
  );
  \$_NAND_  _32_ (
    .A(bus[24]),
    .B(bus[40]),
    .Y(_08_)
  );
  \$_ANDNOT_  _33_ (
    .A(bus[8]),
    .B(_08_),
    .Y(out[8])
  );
  \$_NAND_  _34_ (
    .A(bus[25]),
    .B(bus[41]),
    .Y(_09_)
  );
  \$_ANDNOT_  _35_ (
    .A(bus[9]),
    .B(_09_),
    .Y(out[9])
  );
  \$_NAND_  _36_ (
    .A(bus[26]),
    .B(bus[42]),
    .Y(_10_)
  );
  \$_ANDNOT_  _37_ (
    .A(bus[10]),
    .B(_10_),
    .Y(out[10])
  );
  \$_NAND_  _38_ (
    .A(bus[27]),
    .B(bus[43]),
    .Y(_11_)
  );
  \$_ANDNOT_  _39_ (
    .A(bus[11]),
    .B(_11_),
    .Y(out[11])
  );
  \$_NAND_  _40_ (
    .A(bus[28]),
    .B(bus[44]),
    .Y(_12_)
  );
  \$_ANDNOT_  _41_ (
    .A(bus[12]),
    .B(_12_),
    .Y(out[12])
  );
  \$_NAND_  _42_ (
    .A(bus[29]),
    .B(bus[45]),
    .Y(_13_)
  );
  \$_ANDNOT_  _43_ (
    .A(bus[13]),
    .B(_13_),
    .Y(out[13])
  );
  \$_NAND_  _44_ (
    .A(bus[30]),
    .B(bus[46]),
    .Y(_14_)
  );
  \$_ANDNOT_  _45_ (
    .A(bus[14]),
    .B(_14_),
    .Y(out[14])
  );
  \$_NAND_  _46_ (
    .A(bus[31]),
    .B(bus[47]),
    .Y(_15_)
  );
  \$_ANDNOT_  _47_ (
    .A(bus[15]),
    .B(_15_),
    .Y(out[15])
  );
endmodule

(* src = "dut.sv:14.1-20.10" *)
module submodule_8bit(out, bus);
  (* src = "dut.sv:16.24-16.27" *)
  output [7:0] out;
  wire [7:0] out;
  (* src = "dut.sv:15.28-15.31" *)
  (* wiretype = "\\data_bus_8bit_t" *)
  input [23:0] bus;
  wire [23:0] bus;
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  \$_NAND_  _08_ (
    .A(bus[8]),
    .B(bus[16]),
    .Y(_00_)
  );
  \$_ANDNOT_  _09_ (
    .A(bus[0]),
    .B(_00_),
    .Y(out[0])
  );
  \$_NAND_  _10_ (
    .A(bus[9]),
    .B(bus[17]),
    .Y(_01_)
  );
  \$_ANDNOT_  _11_ (
    .A(bus[1]),
    .B(_01_),
    .Y(out[1])
  );
  \$_NAND_  _12_ (
    .A(bus[10]),
    .B(bus[18]),
    .Y(_02_)
  );
  \$_ANDNOT_  _13_ (
    .A(bus[2]),
    .B(_02_),
    .Y(out[2])
  );
  \$_NAND_  _14_ (
    .A(bus[11]),
    .B(bus[19]),
    .Y(_03_)
  );
  \$_ANDNOT_  _15_ (
    .A(bus[3]),
    .B(_03_),
    .Y(out[3])
  );
  \$_NAND_  _16_ (
    .A(bus[12]),
    .B(bus[20]),
    .Y(_04_)
  );
  \$_ANDNOT_  _17_ (
    .A(bus[4]),
    .B(_04_),
    .Y(out[4])
  );
  \$_NAND_  _18_ (
    .A(bus[13]),
    .B(bus[21]),
    .Y(_05_)
  );
  \$_ANDNOT_  _19_ (
    .A(bus[5]),
    .B(_05_),
    .Y(out[5])
  );
  \$_NAND_  _20_ (
    .A(bus[14]),
    .B(bus[22]),
    .Y(_06_)
  );
  \$_ANDNOT_  _21_ (
    .A(bus[6]),
    .B(_06_),
    .Y(out[6])
  );
  \$_NAND_  _22_ (
    .A(bus[15]),
    .B(bus[23]),
    .Y(_07_)
  );
  \$_ANDNOT_  _23_ (
    .A(bus[7]),
    .B(_07_),
    .Y(out[7])
  );
endmodule

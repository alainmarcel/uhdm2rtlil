/* Generated by Yosys 0.55+46 (git sha1 aa1daa702, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* top =  1  *)
(* src = "dut.sv:2.1-65.10" *)
module simple_fsm(clk, reset, start, done, busy, state);
  (* src = "dut.sv:7.17-7.21" *)
  output busy;
  wire busy;
  (* src = "dut.sv:3.17-3.20" *)
  input clk;
  wire clk;
  (* src = "dut.sv:6.17-6.21" *)
  input done;
  wire done;
  (* \reg  = 32'd1 *)
  (* src = "dut.sv:17.11-17.21" *)
  wire [1:0] next_state;
  (* src = "dut.sv:4.17-4.22" *)
  input reset;
  wire reset;
  (* src = "dut.sv:5.17-5.22" *)
  input start;
  wire start;
  (* src = "dut.sv:8.23-8.28" *)
  output [1:0] state;
  wire [1:0] state;
  (* \always_ff  = 32'd1 *)
  (* src = "dut.sv:20.1-25.4" *)
  \$_SDFF_PP0_  \state_reg[1]  /* _0_ */ (
    .C(clk),
    .D(1'h1),
    .Q(state[1]),
    .R(reset)
  );
  assign busy = state[1];
  assign next_state = 2'h2;
  assign state[0] = 1'h0;
endmodule
